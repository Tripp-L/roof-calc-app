{"ast":null,"code":"var _jsxFileName = \"/home/trippl/roof-calc-app/src/RoofCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './RoofCalculator.css'; // Make sure to create this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoofCalculator = () => {\n  _s();\n  const [pricePerSq, setPricePerSq] = useState(''); // Initialize to empty string\n  const [sqFt, setSqFt] = useState(''); // Keep this as empty string\n  const [waste, setWaste] = useState(''); // Initialize to empty string\n  const [pitch, setPitch] = useState('0-6');\n  const [warranty, setWarranty] = useState('Golden Pledge');\n  const [homeType, setHomeType] = useState('Single-Story Home');\n  const [adder, setAdder] = useState('Select an adder');\n  const [squares, setSquares] = useState(0); // Initialize squares to 0\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [pitchPrices, setPitchPrices] = useState({\n    '0-6': '0',\n    '7-9': '35',\n    '10-12': '55',\n    '13+': '90'\n  });\n  const homeTypePrices = {\n    'Single-Story Home': 0,\n    '2-Story Home (+$/sq)': 5,\n    '3-Story Home (+$/sq)': 35\n  };\n  const calculateSquaresAndTotal = () => {\n    const sqFtValue = sqFt === '' ? 0 : parseInt(sqFt);\n    const wasteValue = waste === '' ? 0 : parseInt(waste);\n    const pricePerSqValue = pricePerSq === '' ? 0 : parseInt(pricePerSq);\n    const baseSquares = Math.round(sqFtValue / 100);\n    const adjustedSquares = Math.round(baseSquares * (1 + wasteValue / 100));\n    setSquares(adjustedSquares);\n    const pitchPrice = parseInt(pitchPrices[pitch]) || 0;\n    const calculatedTotal = adjustedSquares * pricePerSqValue + adjustedSquares * pitchPrice;\n    setTotalPrice(calculatedTotal);\n  };\n  useEffect(() => {\n    calculateSquaresAndTotal();\n  }, [sqFt, waste, pricePerSq]);\n  const handlePricePerSqChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPricePerSq(value);\n      calculateSquaresAndTotal();\n    }\n  };\n  const handlePricePerSqBlur = () => {\n    if (pricePerSq === '') return;\n    let value = parseInt(pricePerSq);\n    if (isNaN(value) || value < 50) {\n      setPricePerSq('50');\n    } else if (value > 1000) {\n      setPricePerSq('1000');\n    } else {\n      setPricePerSq(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n  const handleSqFtChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setSqFt(value);\n      calculateSquaresAndTotal();\n    }\n  };\n  const handleSqFtBlur = () => {\n    if (sqFt === '') return;\n    let value = parseInt(sqFt);\n    if (isNaN(value) || value < 100) {\n      setSqFt('100');\n    } else if (value > 100000) {\n      setSqFt('100000');\n    } else {\n      setSqFt(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n  const handleWasteChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWaste(value);\n      calculateSquaresAndTotal();\n    }\n  };\n  const handleWasteBlur = () => {\n    if (waste === '') return;\n    let value = parseInt(waste);\n    if (isNaN(value) || value < 0) {\n      setWaste('0');\n    } else if (value > 50) {\n      setWaste('50');\n    } else {\n      value = Math.round(value / 5) * 5;\n      setWaste(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n  const handlePitchChange = e => {\n    setPitch(e.target.value);\n    calculateSquaresAndTotal();\n  };\n  const handlePitchPriceChange = (key, e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPitchPrices(prev => ({\n        ...prev,\n        [key]: value\n      }));\n      calculateSquaresAndTotal();\n    }\n  };\n  const handlePitchPriceBlur = key => {\n    let value = parseInt(pitchPrices[key]);\n    if (isNaN(value) || value < 0) {\n      setPitchPrices(prev => ({\n        ...prev,\n        [key]: '0'\n      }));\n    } else if (value > 1000) {\n      // Assuming a max of 1000, adjust as needed\n      setPitchPrices(prev => ({\n        ...prev,\n        [key]: '1000'\n      }));\n    } else {\n      setPitchPrices(prev => ({\n        ...prev,\n        [key]: value.toString()\n      }));\n    }\n    calculateSquaresAndTotal();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Roof Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price/Sq ($)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: pricePerSq,\n        onChange: handlePricePerSqChange,\n        onBlur: handlePricePerSqBlur,\n        min: \"50\",\n        max: \"1000\",\n        step: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sq/ft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: sqFt,\n        onChange: handleSqFtChange,\n        onBlur: handleSqFtBlur,\n        min: \"100\",\n        max: \"100000\",\n        step: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Waste (%)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: waste,\n        onChange: handleWasteChange,\n        onBlur: handleWasteBlur,\n        min: \"0\",\n        max: \"50\",\n        step: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pitch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pitch,\n        onChange: handlePitchChange,\n        children: Object.keys(pitchPrices).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), Object.entries(pitchPrices).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pitch-price\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [key, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"$\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: value,\n          onChange: e => handlePitchPriceChange(key, e),\n          onBlur: () => handlePitchPriceBlur(key),\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Warranty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: warranty,\n        onChange: e => setWarranty(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Golden Pledge\",\n          children: \"Golden Pledge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Silver Pledge\",\n          children: \"Silver Pledge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"$ 17\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Home Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), Object.keys(homeTypePrices).map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: type,\n          name: \"homeType\",\n          value: type,\n          checked: homeType === type,\n          onChange: e => setHomeType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: type,\n          children: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), type !== 'Single-Story Home' && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"$ \", homeTypePrices[type]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 46\n        }, this)]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Adders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: adder,\n        onChange: e => setAdder(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Select an adder\",\n          children: \"Select an adder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Squares: \", squares]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Total Price: $\", totalPrice.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(RoofCalculator, \"9vZALCuXI305YOmmoUz1I87fLgs=\");\n_c = RoofCalculator;\nexport default RoofCalculator;\nvar _c;\n$RefreshReg$(_c, \"RoofCalculator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RoofCalculator","_s","pricePerSq","setPricePerSq","sqFt","setSqFt","waste","setWaste","pitch","setPitch","warranty","setWarranty","homeType","setHomeType","adder","setAdder","squares","setSquares","totalPrice","setTotalPrice","pitchPrices","setPitchPrices","homeTypePrices","calculateSquaresAndTotal","sqFtValue","parseInt","wasteValue","pricePerSqValue","baseSquares","Math","round","adjustedSquares","pitchPrice","calculatedTotal","handlePricePerSqChange","e","value","target","isNaN","handlePricePerSqBlur","toString","handleSqFtChange","handleSqFtBlur","handleWasteChange","handleWasteBlur","handlePitchChange","handlePitchPriceChange","key","prev","handlePitchPriceBlur","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onBlur","min","max","step","Object","keys","map","entries","id","name","checked","htmlFor","toFixed","_c","$RefreshReg$"],"sources":["/home/trippl/roof-calc-app/src/RoofCalculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './RoofCalculator.css'; // Make sure to create this CSS file\n\nconst RoofCalculator = () => {\n  const [pricePerSq, setPricePerSq] = useState('');  // Initialize to empty string\n  const [sqFt, setSqFt] = useState('');  // Keep this as empty string\n  const [waste, setWaste] = useState('');  // Initialize to empty string\n  const [pitch, setPitch] = useState('0-6');\n  const [warranty, setWarranty] = useState('Golden Pledge');\n  const [homeType, setHomeType] = useState('Single-Story Home');\n  const [adder, setAdder] = useState('Select an adder');\n  const [squares, setSquares] = useState(0);  // Initialize squares to 0\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [pitchPrices, setPitchPrices] = useState({\n    '0-6': '0',\n    '7-9': '35',\n    '10-12': '55',\n    '13+': '90'\n  });\n\n  const homeTypePrices = {\n    'Single-Story Home': 0,\n    '2-Story Home (+$/sq)': 5,\n    '3-Story Home (+$/sq)': 35\n  };\n\n  const calculateSquaresAndTotal = () => {\n    const sqFtValue = sqFt === '' ? 0 : parseInt(sqFt);\n    const wasteValue = waste === '' ? 0 : parseInt(waste);\n    const pricePerSqValue = pricePerSq === '' ? 0 : parseInt(pricePerSq);\n\n    const baseSquares = Math.round(sqFtValue / 100);\n    const adjustedSquares = Math.round(baseSquares * (1 + wasteValue / 100));\n    setSquares(adjustedSquares);\n\n    const pitchPrice = parseInt(pitchPrices[pitch]) || 0;\n    const calculatedTotal = adjustedSquares * pricePerSqValue + (adjustedSquares * pitchPrice);\n    setTotalPrice(calculatedTotal);\n  };\n\n  useEffect(() => {\n    calculateSquaresAndTotal();\n  }, [sqFt, waste, pricePerSq]);\n\n  const handlePricePerSqChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPricePerSq(value);\n      calculateSquaresAndTotal();\n    }\n  };\n\n  const handlePricePerSqBlur = () => {\n    if (pricePerSq === '') return;\n    let value = parseInt(pricePerSq);\n    if (isNaN(value) || value < 50) {\n      setPricePerSq('50');\n    } else if (value > 1000) {\n      setPricePerSq('1000');\n    } else {\n      setPricePerSq(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n\n  const handleSqFtChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setSqFt(value);\n      calculateSquaresAndTotal();\n    }\n  };\n\n  const handleSqFtBlur = () => {\n    if (sqFt === '') return;\n    let value = parseInt(sqFt);\n    if (isNaN(value) || value < 100) {\n      setSqFt('100');\n    } else if (value > 100000) {\n      setSqFt('100000');\n    } else {\n      setSqFt(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n\n  const handleWasteChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWaste(value);\n      calculateSquaresAndTotal();\n    }\n  };\n\n  const handleWasteBlur = () => {\n    if (waste === '') return;\n    let value = parseInt(waste);\n    if (isNaN(value) || value < 0) {\n      setWaste('0');\n    } else if (value > 50) {\n      setWaste('50');\n    } else {\n      value = Math.round(value / 5) * 5;\n      setWaste(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n\n  const handlePitchChange = (e) => {\n    setPitch(e.target.value);\n    calculateSquaresAndTotal();\n  };\n\n  const handlePitchPriceChange = (key, e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPitchPrices(prev => ({...prev, [key]: value}));\n      calculateSquaresAndTotal();\n    }\n  };\n\n  const handlePitchPriceBlur = (key) => {\n    let value = parseInt(pitchPrices[key]);\n    if (isNaN(value) || value < 0) {\n      setPitchPrices(prev => ({...prev, [key]: '0'}));\n    } else if (value > 1000) {  // Assuming a max of 1000, adjust as needed\n      setPitchPrices(prev => ({...prev, [key]: '1000'}));\n    } else {\n      setPitchPrices(prev => ({...prev, [key]: value.toString()}));\n    }\n    calculateSquaresAndTotal();\n  };\n\n  return (\n    <div className=\"calculator\">\n      <h1>Roof Calculator</h1>\n      \n      <div className=\"input-group\">\n        <label>Price/Sq ($)</label>\n        <input \n          type=\"number\" \n          value={pricePerSq} \n          onChange={handlePricePerSqChange}\n          onBlur={handlePricePerSqBlur}\n          min=\"50\"\n          max=\"1000\"\n          step=\"1\"\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label>Sq/ft</label>\n        <input \n          type=\"number\" \n          value={sqFt} \n          onChange={handleSqFtChange}\n          onBlur={handleSqFtBlur}\n          min=\"100\"\n          max=\"100000\"\n          step=\"1\"\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label>Waste (%)</label>\n        <input \n          type=\"number\" \n          value={waste} \n          onChange={handleWasteChange}\n          onBlur={handleWasteBlur}\n          min=\"0\"\n          max=\"50\"\n          step=\"5\"\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label>Pitch</label>\n        <select value={pitch} onChange={handlePitchChange}>\n          {Object.keys(pitchPrices).map(key => (\n            <option key={key} value={key}>{key}</option>\n          ))}\n        </select>\n      </div>\n\n      {Object.entries(pitchPrices).map(([key, value]) => (\n        <div key={key} className=\"pitch-price\">\n          <span>{key}:</span>\n          <span>$\n            <input\n              type=\"number\"\n              value={value}\n              onChange={(e) => handlePitchPriceChange(key, e)}\n              onBlur={() => handlePitchPriceBlur(key)}\n              min=\"0\"\n              max=\"1000\"\n              step=\"1\"\n            />\n          </span>\n        </div>\n      ))}\n\n      <div className=\"input-group\">\n        <label>Warranty</label>\n        <select value={warranty} onChange={(e) => setWarranty(e.target.value)}>\n          <option value=\"Golden Pledge\">Golden Pledge</option>\n          <option value=\"Silver Pledge\">Silver Pledge</option>\n        </select>\n        <span>$ 17</span>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Home Type</label>\n        {Object.keys(homeTypePrices).map((type) => (\n          <div key={type}>\n            <input\n              type=\"radio\"\n              id={type}\n              name=\"homeType\"\n              value={type}\n              checked={homeType === type}\n              onChange={(e) => setHomeType(e.target.value)}\n            />\n            <label htmlFor={type}>{type}</label>\n            {type !== 'Single-Story Home' && <span>$ {homeTypePrices[type]}</span>}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"input-group\">\n        <label>Adders</label>\n        <select value={adder} onChange={(e) => setAdder(e.target.value)}>\n          <option value=\"Select an adder\">Select an adder</option>\n          {/* Add more adder options here */}\n        </select>\n      </div>\n\n      <div className=\"results\">\n        <div>Squares: {squares}</div>\n        <div>Total Price: ${totalPrice.toFixed(2)}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default RoofCalculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}