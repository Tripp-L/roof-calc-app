{"ast":null,"code":"var _jsxFileName = \"/home/trippl/roof-calc-app/src/RoofCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './RoofCalculator.css'; // Make sure to create this CSS file\nimport { debounce } from 'lodash'; // Make sure to install lodash\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoofCalculator = () => {\n  _s();\n  const [pricePerSq, setPricePerSq] = useState(''); // Initialize to empty string\n  const [sqFt, setSqFt] = useState('100');\n  const [waste, setWaste] = useState(''); // Initialize to empty string\n  const [pitch, setPitch] = useState('0-6');\n  const [warranty, setWarranty] = useState('Golden Pledge');\n  const [warrantyPrice, setWarrantyPrice] = useState('15');\n  const [homeType, setHomeType] = useState('single');\n  const [homeTypePrice, setHomeTypePrice] = useState('0');\n  const [twoStoryPrice, setTwoStoryPrice] = useState('5');\n  const [threeStoryPrice, setThreeStoryPrice] = useState('35');\n  const [adder, setAdder] = useState('none');\n  const [adderQuantity, setAdderQuantity] = useState('0');\n  const [squares, setSquares] = useState(0); // Initialize squares to 0\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [pitchPrice, setPitchPrice] = useState('0');\n  const [selectedAdders, setSelectedAdders] = useState({});\n  const [customAdderName, setCustomAdderName] = useState('');\n  const [customAdderPrice, setCustomAdderPrice] = useState(0);\n  const [isCustomAdder, setIsCustomAdder] = useState(false);\n  const [selectedAdder, setSelectedAdder] = useState('');\n  const [customUnit, setCustomUnit] = useState('');\n\n  // Define default values\n  const defaultValues = {\n    sqFt: '',\n    waste: '10',\n    pricePerSq: '',\n    pitch: '0-6',\n    pitchPrice: '0',\n    homeType: 'single',\n    homeTypePrice: '0',\n    warranty: 'Golden Pledge',\n    warrantyPrice: '15',\n    adder: 'none',\n    adderQuantity: '0'\n  };\n\n  // Function to reset all fields to default values\n  // const handleClear = () => { ... };\n\n  const pitchOptions = {\n    '0-6': '0',\n    '7-9': '35',\n    '10-12': '55',\n    '13+': '90'\n  };\n  const homeTypePrices = {\n    'Single-Story Home': 0,\n    '2-Story Home (+$/sq)': 5,\n    '3-Story Home (+$/sq)': 35\n  };\n  const warrantyOptions = {\n    'Golden Pledge': '15',\n    'Silver Pledge': '11',\n    'Systems': '8'\n  };\n  const homeTypeOptions = {\n    'single': {\n      label: 'Single-Story',\n      price: '0'\n    },\n    'two-story': {\n      label: '2-Story',\n      price: '10'\n    },\n    'three-story': {\n      label: '3-Story',\n      price: '35'\n    }\n  };\n  const adderOptions = {\n    'none': {\n      label: 'Select an Adder',\n      price: '0'\n    },\n    'ultimate_pipe_boot': {\n      label: 'Ultimate Pipe Boot (Neoprene)',\n      price: '100',\n      unit: 'Boot'\n    },\n    'soffit': {\n      label: 'Soffit (under 12\")',\n      price: '18',\n      unit: 'Ft'\n    },\n    'gutters_1story': {\n      label: 'Gutters (5\"-6\" 1-Story)',\n      price: '12',\n      unit: 'Ft'\n    },\n    'gutters_2story': {\n      label: 'Gutters (5\"-6\" 2-story)',\n      price: '15',\n      unit: 'Ft'\n    },\n    'osb': {\n      label: 'OSB (Plywood Layer)',\n      price: '100',\n      unit: 'Sheet'\n    }\n  };\n  const calculateTotal = () => {\n    let total = 0;\n    const currentSquares = parseFloat(sqFt) / 100; // Convert sq ft to squares\n\n    // Base calculation\n    const baseSquares = Math.round(parseFloat(sqFt) / 100) || 0;\n    const adjustedSquares = Math.round(baseSquares * (1 + (parseFloat(waste) || 0) / 100));\n    total += adjustedSquares * (parseFloat(pricePerSq) || 0);\n\n    // Add pitch price\n    total += adjustedSquares * (parseFloat(pitchPrice) || 0);\n\n    // Add home type price\n    total += adjustedSquares * (parseFloat(homeTypePrice) || 0);\n\n    // Add warranty price\n    total += adjustedSquares * (parseFloat(warrantyPrice) || 0);\n\n    // Add adder prices\n    Object.entries(selectedAdders).forEach(([adderKey, quantity]) => {\n      const adderPrice = parseFloat(adderOptions[adderKey].price);\n      total += adderPrice * quantity;\n    });\n\n    // Custom Adder calculations\n    if (isCustomAdder && customAdderPrice) {\n      const price = parseFloat(customAdderPrice);\n      switch (customUnit) {\n        case '/Sq':\n          total += price * currentSquares;\n          break;\n        case '/Each':\n          total += price; // Simply add the price without multiplication\n          break;\n        case '/Ft':\n          total += price * parseFloat(sqFt); // Multiply by total feet\n          break;\n        case 'Sq/Ft':\n          total += price * parseFloat(sqFt); // Multiply by total square feet\n          break;\n        case '/Sheet':\n          // Assuming standard sheet size, adjust multiplier as needed\n          total += price * (parseFloat(sqFt) / 32); // Example: 32 sq ft per sheet\n          break;\n        default:\n          break;\n      }\n    }\n    setTotalPrice(total);\n    setSquares(adjustedSquares);\n  };\n\n  // Call calculateTotal whenever any input changes\n  useEffect(() => {\n    calculateTotal();\n  }, [sqFt, waste, pricePerSq, pitchPrice, homeTypePrice, warrantyPrice, selectedAdders]);\n\n  // Debounced calculation function\n  const debouncedCalculate = debounce(calculateTotal, 300);\n\n  // Input validation example\n  const handleNumericInput = (e, setter, min = 0, max = Infinity) => {\n    const value = e.target.value;\n    if (value === '' || parseFloat(value) >= min && parseFloat(value) <= max) {\n      setter(value);\n    }\n  };\n  useEffect(() => {\n    calculateTotal();\n  }, [sqFt, waste, pricePerSq]);\n  const handlePricePerSqChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPricePerSq(value);\n      calculateTotal();\n    }\n  };\n  const handlePricePerSqBlur = () => {\n    if (pricePerSq === '') return;\n    let value = parseInt(pricePerSq);\n    if (isNaN(value) || value < 50) {\n      setPricePerSq('50');\n    } else if (value > 1000) {\n      setPricePerSq('1000');\n    } else {\n      setPricePerSq(value.toString());\n    }\n    calculateTotal();\n  };\n  const handleSqFtChange = useCallback(e => {\n    const value = e.target.value;\n    setSqFt(value);\n    debouncedCalculate();\n  }, [debouncedCalculate]);\n  const handleSqFtBlur = () => {\n    let value = parseFloat(sqFt);\n    if (isNaN(value) || value < 100) {\n      setSqFt('100');\n    } else if (value > 100000) {\n      setSqFt('100000');\n    } else {\n      setSqFt(Math.round(value).toString());\n    }\n    calculateTotal();\n  };\n\n  // Add this new function to handle increment/decrement\n  const handleSqFtAdjust = increment => {\n    let value = parseInt(sqFt) || 0;\n    value += increment;\n    if (value < 100) value = 100;\n    if (value > 100000) value = 100000;\n    setSqFt(value.toString());\n    calculateTotal();\n  };\n  const handleWasteChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWaste(value);\n      calculateTotal();\n    }\n  };\n  const handleWasteBlur = () => {\n    if (waste === '') return;\n    let value = parseInt(waste);\n    if (isNaN(value) || value < 0) {\n      setWaste('0');\n    } else if (value > 50) {\n      setWaste('50');\n    } else {\n      value = Math.round(value / 5) * 5;\n      setWaste(value.toString());\n    }\n    calculateTotal();\n  };\n  const handlePitchChange = e => {\n    const selectedPitch = e.target.value;\n    setPitch(selectedPitch);\n    setPitchPrice(pitchOptions[selectedPitch]);\n    calculateTotal();\n  };\n  const handlePitchPriceChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPitchPrice(value);\n      calculateTotal();\n    }\n  };\n  const handlePitchPriceBlur = () => {\n    let value = parseInt(pitchPrice);\n    if (isNaN(value) || value < 0) {\n      setPitchPrice('0');\n    } else if (value > 1000) {\n      setPitchPrice('1000');\n    } else {\n      setPitchPrice(value.toString());\n    }\n    calculateTotal();\n  };\n  const handleWarrantyChange = e => {\n    const selectedWarranty = e.target.value;\n    setWarranty(selectedWarranty);\n    setWarrantyPrice(warrantyOptions[selectedWarranty]);\n    calculateTotal();\n  };\n  const handleWarrantyPriceChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWarrantyPrice(value);\n      calculateTotal();\n    }\n  };\n  const handleWarrantyPriceBlur = () => {\n    let value = parseInt(warrantyPrice);\n    if (isNaN(value) || value < 0) {\n      setWarrantyPrice('0');\n    } else if (value > 1000) {\n      setWarrantyPrice('1000');\n    } else {\n      setWarrantyPrice(value.toString());\n    }\n    calculateTotal();\n  };\n  const handleHomeTypeChange = e => {\n    const selectedType = e.target.value;\n    setHomeType(selectedType);\n    setHomeTypePrice(homeTypeOptions[selectedType].price);\n    calculateTotal();\n  };\n  const handleHomeTypePriceChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setHomeTypePrice(value);\n      calculateTotal();\n    }\n  };\n  const handleHomeTypePriceBlur = () => {\n    let value = parseInt(homeTypePrice);\n    if (isNaN(value) || value < 0) {\n      setHomeTypePrice('0');\n    } else if (value > 1000) {\n      setHomeTypePrice('1000');\n    } else {\n      setHomeTypePrice(value.toString());\n    }\n    calculateTotal();\n  };\n  const handleAdderChange = e => {\n    const selectedAdder = e.target.value;\n    if (selectedAdder !== 'none') {\n      setSelectedAdders(prev => ({\n        ...prev,\n        [selectedAdder]: 1\n      }));\n    }\n    calculateTotal();\n  };\n  const handleAdderQuantityChange = (adderKey, value) => {\n    if (value === '' || !isNaN(value) && parseInt(value) >= 0) {\n      setSelectedAdders(prev => ({\n        ...prev,\n        [adderKey]: value\n      }));\n      calculateTotal();\n    }\n  };\n  const handleAdderQuantityBlur = adderKey => {\n    let value = parseInt(selectedAdders[adderKey]);\n    if (isNaN(value) || value < 0) {\n      value = 0;\n    } else if (value > 1000) {\n      value = 1000;\n    }\n    setSelectedAdders(prev => ({\n      ...prev,\n      [adderKey]: value.toString()\n    }));\n    calculateTotal();\n  };\n  const removeAdder = adderKey => {\n    setSelectedAdders(prev => {\n      const newAdders = {\n        ...prev\n      };\n      delete newAdders[adderKey];\n      return newAdders;\n    });\n    calculateTotal();\n  };\n  const handleCustomAdderPrice = e => {\n    const value = e.target.value;\n    setCustomAdderPrice(value);\n    calculateTotal();\n  };\n  const handleCustomAdderName = e => {\n    setCustomAdderName(e.target.value);\n  };\n  const MemoizedInputGroup = /*#__PURE__*/React.memo(({\n    label,\n    value,\n    onChange,\n    ...props\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: value,\n      onChange: onChange,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }, this));\n  const clearCalculator = () => {\n    setSqFt('');\n    setWaste('10');\n    setPricePerSq('');\n    setPitch('0-6');\n    setPitchPrice('0');\n    setHomeType('single');\n    setHomeTypePrice('0');\n    setWarranty('Golden Pledge');\n    setWarrantyPrice('15');\n    setAdder('none');\n    setAdderQuantity('0');\n    setSquares(0);\n    setTotalPrice(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Roof Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"horizontal-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"horizontal-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Price/Sq ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: pricePerSq,\n          onChange: handlePricePerSqChange,\n          onBlur: handlePricePerSqBlur,\n          min: \"50\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"horizontal-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sq/ft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: sqFt,\n          onChange: handleSqFtChange,\n          onBlur: handleSqFtBlur,\n          min: \"100\",\n          max: \"100000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"horizontal-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Waste (%)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: waste,\n          onChange: handleWasteChange,\n          onBlur: handleWasteBlur,\n          min: \"0\",\n          max: \"50\",\n          step: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pitch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pitch,\n        onChange: handlePitchChange,\n        children: Object.keys(pitchOptions).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: pitchPrice,\n          onChange: handlePitchPriceChange,\n          onBlur: handlePitchPriceBlur,\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"/Sq\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Warranty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: warranty,\n        onChange: handleWarrantyChange,\n        children: Object.keys(warrantyOptions).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: warrantyPrice,\n          onChange: handleWarrantyPriceChange,\n          onBlur: handleWarrantyPriceBlur,\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"/Sq\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Home Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: homeType,\n        onChange: handleHomeTypeChange,\n        children: Object.entries(homeTypeOptions).map(([key, {\n          label,\n          price\n        }]) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key === 'single' ? label : `${label} +($${price})`\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: homeTypePrice,\n          onChange: handleHomeTypePriceChange,\n          onBlur: handleHomeTypePriceBlur,\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"/Sq\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adder-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Adders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: isCustomAdder ? \"custom\" : selectedAdder,\n        onChange: e => {\n          if (e.target.value === \"custom\") {\n            setIsCustomAdder(true);\n            setSelectedAdder(\"\");\n          } else {\n            setIsCustomAdder(false);\n            setSelectedAdder(e.target.value);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an Adder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), Object.entries(adderOptions).map(([key, {\n          label,\n          price,\n          unit\n        }]) => key !== 'none' && /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: `${label} ($${price}/${unit})`\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"custom\",\n          children: \"Custom Adder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this), isCustomAdder && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-adder-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Adder here...\",\n          value: customAdderName,\n          onChange: handleCustomAdderName,\n          className: \"custom-adder-name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"price-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: customAdderPrice,\n            onChange: handleCustomAdderPrice,\n            min: \"0\",\n            step: \"0.01\",\n            className: \"price-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: customUnit,\n            onChange: e => {\n              setCustomUnit(e.target.value);\n              calculateTotal(); // Recalculate when unit changes\n            },\n            className: \"unit-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"/Each\",\n              children: \"/Each\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"/Sq\",\n              children: \"/Sq\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"/Ft\",\n              children: \"/Ft\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Sq/Ft\",\n              children: \"Sq/Ft\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"/Sheet\",\n              children: \"/Sheet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this), Object.entries(selectedAdders).map(([adderKey, quantity]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group selected-adder\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: adderOptions[adderKey].label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adder-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: quantity,\n          onChange: e => handleAdderQuantityChange(adderKey, e.target.value),\n          onBlur: () => handleAdderQuantityBlur(adderKey),\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [adderOptions[adderKey].unit, \"(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-adder\",\n          onClick: () => removeAdder(adderKey),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 11\n      }, this)]\n    }, adderKey, true, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Squares: \", squares]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Price: $\", totalPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-button clear-button-red\",\n        onClick: clearCalculator,\n        children: \"CLEAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 383,\n    columnNumber: 5\n  }, this);\n};\n_s(RoofCalculator, \"1k26Kyv+N2uSTu6WsuqjsKTPGM0=\");\n_c = RoofCalculator;\nexport default RoofCalculator;\nvar _c;\n$RefreshReg$(_c, \"RoofCalculator\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","debounce","jsxDEV","_jsxDEV","RoofCalculator","_s","pricePerSq","setPricePerSq","sqFt","setSqFt","waste","setWaste","pitch","setPitch","warranty","setWarranty","warrantyPrice","setWarrantyPrice","homeType","setHomeType","homeTypePrice","setHomeTypePrice","twoStoryPrice","setTwoStoryPrice","threeStoryPrice","setThreeStoryPrice","adder","setAdder","adderQuantity","setAdderQuantity","squares","setSquares","totalPrice","setTotalPrice","pitchPrice","setPitchPrice","selectedAdders","setSelectedAdders","customAdderName","setCustomAdderName","customAdderPrice","setCustomAdderPrice","isCustomAdder","setIsCustomAdder","selectedAdder","setSelectedAdder","customUnit","setCustomUnit","defaultValues","pitchOptions","homeTypePrices","warrantyOptions","homeTypeOptions","label","price","adderOptions","unit","calculateTotal","total","currentSquares","parseFloat","baseSquares","Math","round","adjustedSquares","Object","entries","forEach","adderKey","quantity","adderPrice","debouncedCalculate","handleNumericInput","e","setter","min","max","Infinity","value","target","handlePricePerSqChange","isNaN","handlePricePerSqBlur","parseInt","toString","handleSqFtChange","handleSqFtBlur","handleSqFtAdjust","increment","handleWasteChange","handleWasteBlur","handlePitchChange","selectedPitch","handlePitchPriceChange","handlePitchPriceBlur","handleWarrantyChange","selectedWarranty","handleWarrantyPriceChange","handleWarrantyPriceBlur","handleHomeTypeChange","selectedType","handleHomeTypePriceChange","handleHomeTypePriceBlur","handleAdderChange","prev","handleAdderQuantityChange","handleAdderQuantityBlur","removeAdder","newAdders","handleCustomAdderPrice","handleCustomAdderName","MemoizedInputGroup","memo","onChange","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","clearCalculator","type","onBlur","step","keys","map","key","placeholder","onClick","toFixed","_c","$RefreshReg$"],"sources":["/home/trippl/roof-calc-app/src/RoofCalculator.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './RoofCalculator.css'; // Make sure to create this CSS file\nimport { debounce } from 'lodash'; // Make sure to install lodash\n\nconst RoofCalculator = () => {\n  const [pricePerSq, setPricePerSq] = useState('');  // Initialize to empty string\n  const [sqFt, setSqFt] = useState('100');\n  const [waste, setWaste] = useState('');  // Initialize to empty string\n  const [pitch, setPitch] = useState('0-6');\n  const [warranty, setWarranty] = useState('Golden Pledge');\n  const [warrantyPrice, setWarrantyPrice] = useState('15');\n  const [homeType, setHomeType] = useState('single');\n  const [homeTypePrice, setHomeTypePrice] = useState('0');\n  const [twoStoryPrice, setTwoStoryPrice] = useState('5');\n  const [threeStoryPrice, setThreeStoryPrice] = useState('35');\n  const [adder, setAdder] = useState('none');\n  const [adderQuantity, setAdderQuantity] = useState('0');\n  const [squares, setSquares] = useState(0);  // Initialize squares to 0\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [pitchPrice, setPitchPrice] = useState('0');\n  const [selectedAdders, setSelectedAdders] = useState({});\n  const [customAdderName, setCustomAdderName] = useState('');\n  const [customAdderPrice, setCustomAdderPrice] = useState(0);\n  const [isCustomAdder, setIsCustomAdder] = useState(false);\n  const [selectedAdder, setSelectedAdder] = useState('');\n  const [customUnit, setCustomUnit] = useState('');\n\n  // Define default values\n  const defaultValues = {\n    sqFt: '',\n    waste: '10',\n    pricePerSq: '',\n    pitch: '0-6',\n    pitchPrice: '0',\n    homeType: 'single',\n    homeTypePrice: '0',\n    warranty: 'Golden Pledge',\n    warrantyPrice: '15',\n    adder: 'none',\n    adderQuantity: '0'\n  };\n\n  // Function to reset all fields to default values\n  // const handleClear = () => { ... };\n\n  const pitchOptions = {\n    '0-6': '0',\n    '7-9': '35',\n    '10-12': '55',\n    '13+': '90'\n  };\n\n  const homeTypePrices = {\n    'Single-Story Home': 0,\n    '2-Story Home (+$/sq)': 5,\n    '3-Story Home (+$/sq)': 35\n  };\n\n  const warrantyOptions = {\n    'Golden Pledge': '15',\n    'Silver Pledge': '11',\n    'Systems': '8'\n  };\n\n  const homeTypeOptions = {\n    'single': { label: 'Single-Story', price: '0' },\n    'two-story': { label: '2-Story', price: '10' },\n    'three-story': { label: '3-Story', price: '35' }\n  };\n\n  const adderOptions = {\n    'none': { label: 'Select an Adder', price: '0' },\n    'ultimate_pipe_boot': { label: 'Ultimate Pipe Boot (Neoprene)', price: '100', unit: 'Boot' },\n    'soffit': { label: 'Soffit (under 12\")', price: '18', unit: 'Ft' },\n    'gutters_1story': { label: 'Gutters (5\"-6\" 1-Story)', price: '12', unit: 'Ft' },\n    'gutters_2story': { label: 'Gutters (5\"-6\" 2-story)', price: '15', unit: 'Ft' },\n    'osb': { label: 'OSB (Plywood Layer)', price: '100', unit: 'Sheet' }\n  };\n\n  const calculateTotal = () => {\n    let total = 0;\n    const currentSquares = parseFloat(sqFt) / 100; // Convert sq ft to squares\n    \n    // Base calculation\n    const baseSquares = Math.round(parseFloat(sqFt) / 100) || 0;\n    const adjustedSquares = Math.round(baseSquares * (1 + (parseFloat(waste) || 0) / 100));\n    total += adjustedSquares * (parseFloat(pricePerSq) || 0);\n\n    // Add pitch price\n    total += adjustedSquares * (parseFloat(pitchPrice) || 0);\n\n    // Add home type price\n    total += adjustedSquares * (parseFloat(homeTypePrice) || 0);\n\n    // Add warranty price\n    total += adjustedSquares * (parseFloat(warrantyPrice) || 0);\n\n    // Add adder prices\n    Object.entries(selectedAdders).forEach(([adderKey, quantity]) => {\n      const adderPrice = parseFloat(adderOptions[adderKey].price);\n      total += adderPrice * quantity;\n    });\n\n    // Custom Adder calculations\n    if (isCustomAdder && customAdderPrice) {\n      const price = parseFloat(customAdderPrice);\n      switch (customUnit) {\n        case '/Sq':\n          total += price * currentSquares;\n          break;\n        case '/Each':\n          total += price; // Simply add the price without multiplication\n          break;\n        case '/Ft':\n          total += price * parseFloat(sqFt); // Multiply by total feet\n          break;\n        case 'Sq/Ft':\n          total += price * parseFloat(sqFt); // Multiply by total square feet\n          break;\n        case '/Sheet':\n          // Assuming standard sheet size, adjust multiplier as needed\n          total += price * (parseFloat(sqFt) / 32); // Example: 32 sq ft per sheet\n          break;\n        default:\n          break;\n      }\n    }\n\n    setTotalPrice(total);\n    setSquares(adjustedSquares);\n  };\n\n  // Call calculateTotal whenever any input changes\n  useEffect(() => {\n    calculateTotal();\n  }, [sqFt, waste, pricePerSq, pitchPrice, homeTypePrice, warrantyPrice, selectedAdders]);\n\n  // Debounced calculation function\n  const debouncedCalculate = debounce(calculateTotal, 300);\n\n  // Input validation example\n  const handleNumericInput = (e, setter, min = 0, max = Infinity) => {\n    const value = e.target.value;\n    if (value === '' || (parseFloat(value) >= min && parseFloat(value) <= max)) {\n      setter(value);\n    }\n  };\n\n  useEffect(() => {\n    calculateTotal();\n  }, [sqFt, waste, pricePerSq]);\n\n  const handlePricePerSqChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPricePerSq(value);\n      calculateTotal();\n    }\n  };\n\n  const handlePricePerSqBlur = () => {\n    if (pricePerSq === '') return;\n    let value = parseInt(pricePerSq);\n    if (isNaN(value) || value < 50) {\n      setPricePerSq('50');\n    } else if (value > 1000) {\n      setPricePerSq('1000');\n    } else {\n      setPricePerSq(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const handleSqFtChange = useCallback((e) => {\n    const value = e.target.value;\n    setSqFt(value);\n    debouncedCalculate();\n  }, [debouncedCalculate]);\n\n  const handleSqFtBlur = () => {\n    let value = parseFloat(sqFt);\n    if (isNaN(value) || value < 100) {\n      setSqFt('100');\n    } else if (value > 100000) {\n      setSqFt('100000');\n    } else {\n      setSqFt(Math.round(value).toString());\n    }\n    calculateTotal();\n  };\n\n  // Add this new function to handle increment/decrement\n  const handleSqFtAdjust = (increment) => {\n    let value = parseInt(sqFt) || 0;\n    value += increment;\n    if (value < 100) value = 100;\n    if (value > 100000) value = 100000;\n    setSqFt(value.toString());\n    calculateTotal();\n  };\n\n  const handleWasteChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWaste(value);\n      calculateTotal();\n    }\n  };\n\n  const handleWasteBlur = () => {\n    if (waste === '') return;\n    let value = parseInt(waste);\n    if (isNaN(value) || value < 0) {\n      setWaste('0');\n    } else if (value > 50) {\n      setWaste('50');\n    } else {\n      value = Math.round(value / 5) * 5;\n      setWaste(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const handlePitchChange = (e) => {\n    const selectedPitch = e.target.value;\n    setPitch(selectedPitch);\n    setPitchPrice(pitchOptions[selectedPitch]);\n    calculateTotal();\n  };\n\n  const handlePitchPriceChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPitchPrice(value);\n      calculateTotal();\n    }\n  };\n\n  const handlePitchPriceBlur = () => {\n    let value = parseInt(pitchPrice);\n    if (isNaN(value) || value < 0) {\n      setPitchPrice('0');\n    } else if (value > 1000) {\n      setPitchPrice('1000');\n    } else {\n      setPitchPrice(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const handleWarrantyChange = (e) => {\n    const selectedWarranty = e.target.value;\n    setWarranty(selectedWarranty);\n    setWarrantyPrice(warrantyOptions[selectedWarranty]);\n    calculateTotal();\n  };\n\n  const handleWarrantyPriceChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWarrantyPrice(value);\n      calculateTotal();\n    }\n  };\n\n  const handleWarrantyPriceBlur = () => {\n    let value = parseInt(warrantyPrice);\n    if (isNaN(value) || value < 0) {\n      setWarrantyPrice('0');\n    } else if (value > 1000) {\n      setWarrantyPrice('1000');\n    } else {\n      setWarrantyPrice(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const handleHomeTypeChange = (e) => {\n    const selectedType = e.target.value;\n    setHomeType(selectedType);\n    setHomeTypePrice(homeTypeOptions[selectedType].price);\n    calculateTotal();\n  };\n\n  const handleHomeTypePriceChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setHomeTypePrice(value);\n      calculateTotal();\n    }\n  };\n\n  const handleHomeTypePriceBlur = () => {\n    let value = parseInt(homeTypePrice);\n    if (isNaN(value) || value < 0) {\n      setHomeTypePrice('0');\n    } else if (value > 1000) {\n      setHomeTypePrice('1000');\n    } else {\n      setHomeTypePrice(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const handleAdderChange = (e) => {\n    const selectedAdder = e.target.value;\n    if (selectedAdder !== 'none') {\n      setSelectedAdders(prev => ({\n        ...prev,\n        [selectedAdder]: 1\n      }));\n    }\n    calculateTotal();\n  };\n\n  const handleAdderQuantityChange = (adderKey, value) => {\n    if (value === '' || (!isNaN(value) && parseInt(value) >= 0)) {\n      setSelectedAdders(prev => ({\n        ...prev,\n        [adderKey]: value\n      }));\n      calculateTotal();\n    }\n  };\n\n  const handleAdderQuantityBlur = (adderKey) => {\n    let value = parseInt(selectedAdders[adderKey]);\n    if (isNaN(value) || value < 0) {\n      value = 0;\n    } else if (value > 1000) {\n      value = 1000;\n    }\n    setSelectedAdders(prev => ({\n      ...prev,\n      [adderKey]: value.toString()\n    }));\n    calculateTotal();\n  };\n\n  const removeAdder = (adderKey) => {\n    setSelectedAdders(prev => {\n      const newAdders = { ...prev };\n      delete newAdders[adderKey];\n      return newAdders;\n    });\n    calculateTotal();\n  };\n\n  const handleCustomAdderPrice = (e) => {\n    const value = e.target.value;\n    setCustomAdderPrice(value);\n    calculateTotal();\n  };\n\n  const handleCustomAdderName = (e) => {\n    setCustomAdderName(e.target.value);\n  };\n\n  const MemoizedInputGroup = React.memo(({ label, value, onChange, ...props }) => (\n    <div className=\"input-group\">\n      <label>{label}</label>\n      <input value={value} onChange={onChange} {...props} />\n    </div>\n  ));\n\n  const clearCalculator = () => {\n    setSqFt('');\n    setWaste('10');\n    setPricePerSq('');\n    setPitch('0-6');\n    setPitchPrice('0');\n    setHomeType('single');\n    setHomeTypePrice('0');\n    setWarranty('Golden Pledge');\n    setWarrantyPrice('15');\n    setAdder('none');\n    setAdderQuantity('0');\n    setSquares(0);\n    setTotalPrice(0);\n  };\n\n  return (\n    <div className=\"calculator\">\n      <h1>Roof Calculator</h1>\n      \n      <div className=\"horizontal-inputs\">\n        <div className=\"horizontal-input-group\">\n          <label>Price/Sq ($)</label>\n          <input \n            type=\"number\" \n            value={pricePerSq} \n            onChange={handlePricePerSqChange}\n            onBlur={handlePricePerSqBlur}\n            min=\"50\"\n            max=\"1000\"\n            step=\"1\"\n          />\n        </div>\n\n        <div className=\"horizontal-input-group\">\n          <label>Sq/ft</label>\n          <input \n            type=\"number\"\n            value={sqFt} \n            onChange={handleSqFtChange}\n            onBlur={handleSqFtBlur}\n            min=\"100\"\n            max=\"100000\"\n          />\n        </div>\n\n        <div className=\"horizontal-input-group\">\n          <label>Waste (%)</label>\n          <input \n            type=\"number\" \n            value={waste} \n            onChange={handleWasteChange}\n            onBlur={handleWasteBlur}\n            min=\"0\"\n            max=\"50\"\n            step=\"5\"\n          />\n        </div>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Pitch</label>\n        <select value={pitch} onChange={handlePitchChange}>\n          {Object.keys(pitchOptions).map(key => (\n            <option key={key} value={key}>{key}</option>\n          ))}\n        </select>\n        <div className=\"price-input-wrapper\">\n          <span>$</span>\n          <input \n            type=\"number\" \n            value={pitchPrice} \n            onChange={handlePitchPriceChange}\n            onBlur={handlePitchPriceBlur}\n            min=\"0\"\n            max=\"1000\"\n            step=\"1\"\n          />\n          <span>/Sq</span>\n        </div>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Warranty</label>\n        <select value={warranty} onChange={handleWarrantyChange}>\n          {Object.keys(warrantyOptions).map(key => (\n            <option key={key} value={key}>{key}</option>\n          ))}\n        </select>\n        <div className=\"price-input-wrapper\">\n          <span>$</span>\n          <input \n            type=\"number\" \n            value={warrantyPrice} \n            onChange={handleWarrantyPriceChange}\n            onBlur={handleWarrantyPriceBlur}\n            min=\"0\"\n            max=\"1000\"\n            step=\"1\"\n          />\n          <span>/Sq</span>\n        </div>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Home Type</label>\n        <select value={homeType} onChange={handleHomeTypeChange}>\n          {Object.entries(homeTypeOptions).map(([key, { label, price }]) => (\n            <option key={key} value={key}>\n              {key === 'single' \n                ? label \n                : `${label} +($${price})`}\n            </option>\n          ))}\n        </select>\n        <div className=\"price-input-wrapper\">\n          <span>$</span>\n          <input \n            type=\"number\" \n            value={homeTypePrice} \n            onChange={handleHomeTypePriceChange}\n            onBlur={handleHomeTypePriceBlur}\n            min=\"0\"\n            max=\"1000\"\n            step=\"1\"\n          />\n          <span>/Sq</span>\n        </div>\n      </div>\n\n      <div className=\"adder-section\">\n        <label>Adders</label>\n        <select \n          value={isCustomAdder ? \"custom\" : selectedAdder} \n          onChange={(e) => {\n            if (e.target.value === \"custom\") {\n              setIsCustomAdder(true);\n              setSelectedAdder(\"\");\n            } else {\n              setIsCustomAdder(false);\n              setSelectedAdder(e.target.value);\n            }\n          }}\n        >\n          <option value=\"\">Select an Adder</option>\n          {Object.entries(adderOptions).map(([key, { label, price, unit }]) => (\n            key !== 'none' && (\n              <option key={key} value={key}>\n                {`${label} ($${price}/${unit})`}\n              </option>\n            )\n          ))}\n          <option value=\"custom\">Custom Adder</option>\n        </select>\n\n        {isCustomAdder && (\n          <div className=\"custom-adder-inputs\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter Adder here...\"\n              value={customAdderName}\n              onChange={handleCustomAdderName}\n              className=\"custom-adder-name\"\n            />\n            <div className=\"price-container\">\n              <span>$</span>\n              <input\n                type=\"number\"\n                value={customAdderPrice}\n                onChange={handleCustomAdderPrice}\n                min=\"0\"\n                step=\"0.01\"\n                className=\"price-input\"\n              />\n              <select \n                value={customUnit}\n                onChange={(e) => {\n                  setCustomUnit(e.target.value);\n                  calculateTotal(); // Recalculate when unit changes\n                }}\n                className=\"unit-select\"\n              >\n                <option value=\"\">Select Unit</option>\n                <option value=\"/Each\">/Each</option>\n                <option value=\"/Sq\">/Sq</option>\n                <option value=\"/Ft\">/Ft</option>\n                <option value=\"Sq/Ft\">Sq/Ft</option>\n                <option value=\"/Sheet\">/Sheet</option>\n              </select>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {Object.entries(selectedAdders).map(([adderKey, quantity]) => (\n        <div key={adderKey} className=\"input-group selected-adder\">\n          <label>{adderOptions[adderKey].label}</label>\n          <div className=\"adder-input-wrapper\">\n            <input \n              type=\"number\" \n              value={quantity} \n              onChange={(e) => handleAdderQuantityChange(adderKey, e.target.value)}\n              onBlur={() => handleAdderQuantityBlur(adderKey)}\n              min=\"0\"\n              max=\"1000\"\n              step=\"1\"\n            />\n            <span>{adderOptions[adderKey].unit}(s)</span>\n            <button className=\"remove-adder\" onClick={() => removeAdder(adderKey)}>×</button>\n          </div>\n        </div>\n      ))}\n\n      <div className=\"results-container\">\n        <div className=\"results\">\n          <p>Squares: {squares}</p>\n          <p>Total Price: ${totalPrice.toFixed(2)}</p>\n        </div>\n        <button className=\"clear-button clear-button-red\" onClick={clearCalculator}>\n          CLEAR\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default RoofCalculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}