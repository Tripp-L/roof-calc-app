{"ast":null,"code":"var _jsxFileName = \"/home/trippl/roof-calc-app/src/RoofCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './RoofCalculator.css'; // Make sure to create this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoofCalculator = () => {\n  _s();\n  const [pricePerSq, setPricePerSq] = useState(''); // Initialize to empty string\n  const [sqFt, setSqFt] = useState(''); // Keep this as empty string\n  const [waste, setWaste] = useState(''); // Initialize to empty string\n  const [pitch, setPitch] = useState('0');\n  const [warranty, setWarranty] = useState('Golden Pledge');\n  const [homeType, setHomeType] = useState('Single-Story Home');\n  const [adder, setAdder] = useState('Select an adder');\n  const [squares, setSquares] = useState(0); // Initialize squares to 0\n  const [totalPrice, setTotalPrice] = useState(0);\n  const pitchPrices = {\n    '0-6': 0,\n    '7-9': 35,\n    '10-12': 55,\n    '13+': 90\n  };\n  const homeTypePrices = {\n    'Single-Story Home': 0,\n    '2-Story Home (+$/sq)': 5,\n    '3-Story Home (+$/sq)': 35\n  };\n  const calculateSquaresAndTotal = () => {\n    if (sqFt === '') {\n      setSquares(0);\n      setTotalPrice(0);\n      return;\n    }\n    const baseSquares = Math.round(parseInt(sqFt) / 100);\n    const wastePercentage = waste === '' ? 0 : parseInt(waste) / 100;\n    const adjustedSquares = Math.round(baseSquares * (1 + wastePercentage));\n    setSquares(adjustedSquares);\n    const pricePerSquare = pricePerSq === '' ? 0 : parseInt(pricePerSq);\n    const calculatedTotal = adjustedSquares * pricePerSquare;\n    setTotalPrice(calculatedTotal);\n  };\n  useEffect(() => {\n    calculateSquaresAndTotal();\n  }, [sqFt, waste, pricePerSq]);\n  const handlePricePerSqChange = e => {\n    const value = e.target.value;\n    // Allow empty string or any number\n    if (value === '' || !isNaN(value)) {\n      setPricePerSq(value);\n    }\n  };\n  const handlePricePerSqBlur = () => {\n    if (pricePerSq === '') {\n      return; // Keep it empty if no input\n    }\n    let value = parseInt(pricePerSq);\n    if (isNaN(value) || value < 50) {\n      setPricePerSq('50');\n    } else if (value > 1000) {\n      setPricePerSq('1000');\n    } else {\n      setPricePerSq(value.toString());\n    }\n  };\n  const handleSqFtChange = e => {\n    const value = e.target.value;\n    // Allow empty string or any number\n    if (value === '' || !isNaN(value)) {\n      setSqFt(value);\n      if (value !== '') {\n        const numValue = parseInt(value);\n        setSquares(Math.round(numValue / 100));\n      } else {\n        setSquares(0); // Set squares to 0 when input is empty\n      }\n    }\n  };\n  const handleSqFtBlur = () => {\n    if (sqFt === '') {\n      setSquares(0);\n      return;\n    }\n    let value = parseInt(sqFt);\n    if (isNaN(value) || value < 100) {\n      setSqFt('100');\n      setSquares(1);\n    } else if (value > 100000) {\n      setSqFt('100000');\n      setSquares(1000);\n    } else {\n      setSqFt(value.toString());\n      setSquares(Math.round(value / 100));\n    }\n    calculateSquaresAndTotal();\n  };\n  const handleWasteChange = e => {\n    const value = e.target.value;\n    // Allow empty string or any number\n    if (value === '' || !isNaN(value)) {\n      setWaste(value);\n    }\n  };\n  const handleWasteBlur = () => {\n    if (waste === '') {\n      return; // Keep it empty if no input\n    }\n    let value = parseInt(waste);\n    if (isNaN(value) || value < 0) {\n      setWaste('0');\n    } else if (value > 50) {\n      setWaste('50');\n    } else {\n      // Round to nearest 5\n      value = Math.round(value / 5) * 5;\n      setWaste(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Roof Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price/Sq ($)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: pricePerSq,\n        onChange: handlePricePerSqChange,\n        onBlur: handlePricePerSqBlur,\n        min: \"50\",\n        max: \"1000\",\n        step: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sq/ft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: sqFt,\n        onChange: handleSqFtChange,\n        onBlur: handleSqFtBlur,\n        min: \"100\",\n        max: \"100000\",\n        step: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Waste (%)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: waste,\n        onChange: handleWasteChange,\n        onBlur: handleWasteBlur,\n        min: \"0\",\n        max: \"50\",\n        step: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pitch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pitch,\n        onChange: e => setPitch(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0-6\",\n          children: \"0-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"7-9\",\n          children: \"7-9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10-12\",\n          children: \"10-12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"13+\",\n          children: \"13+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), Object.entries(pitchPrices).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pitch-price\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [key, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"$ \", value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Warranty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: warranty,\n        onChange: e => setWarranty(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Golden Pledge\",\n          children: \"Golden Pledge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Silver Pledge\",\n          children: \"Silver Pledge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"$ 17\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Home Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), Object.keys(homeTypePrices).map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: type,\n          name: \"homeType\",\n          value: type,\n          checked: homeType === type,\n          onChange: e => setHomeType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: type,\n          children: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), type !== 'Single-Story Home' && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"$ \", homeTypePrices[type]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 46\n        }, this)]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Adders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: adder,\n        onChange: e => setAdder(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Select an adder\",\n          children: \"Select an adder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Squares: \", squares]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Total Price: $\", totalPrice.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(RoofCalculator, \"L3msrTq7SjZw4NnDrdk8bpH35kc=\");\n_c = RoofCalculator;\nexport default RoofCalculator;\nvar _c;\n$RefreshReg$(_c, \"RoofCalculator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RoofCalculator","_s","pricePerSq","setPricePerSq","sqFt","setSqFt","waste","setWaste","pitch","setPitch","warranty","setWarranty","homeType","setHomeType","adder","setAdder","squares","setSquares","totalPrice","setTotalPrice","pitchPrices","homeTypePrices","calculateSquaresAndTotal","baseSquares","Math","round","parseInt","wastePercentage","adjustedSquares","pricePerSquare","calculatedTotal","handlePricePerSqChange","e","value","target","isNaN","handlePricePerSqBlur","toString","handleSqFtChange","numValue","handleSqFtBlur","handleWasteChange","handleWasteBlur","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onBlur","min","max","step","Object","entries","map","key","keys","id","name","checked","htmlFor","toFixed","_c","$RefreshReg$"],"sources":["/home/trippl/roof-calc-app/src/RoofCalculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './RoofCalculator.css'; // Make sure to create this CSS file\n\nconst RoofCalculator = () => {\n  const [pricePerSq, setPricePerSq] = useState('');  // Initialize to empty string\n  const [sqFt, setSqFt] = useState('');  // Keep this as empty string\n  const [waste, setWaste] = useState('');  // Initialize to empty string\n  const [pitch, setPitch] = useState('0');\n  const [warranty, setWarranty] = useState('Golden Pledge');\n  const [homeType, setHomeType] = useState('Single-Story Home');\n  const [adder, setAdder] = useState('Select an adder');\n  const [squares, setSquares] = useState(0);  // Initialize squares to 0\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  const pitchPrices = {\n    '0-6': 0,\n    '7-9': 35,\n    '10-12': 55,\n    '13+': 90\n  };\n\n  const homeTypePrices = {\n    'Single-Story Home': 0,\n    '2-Story Home (+$/sq)': 5,\n    '3-Story Home (+$/sq)': 35\n  };\n\n  const calculateSquaresAndTotal = () => {\n    if (sqFt === '') {\n      setSquares(0);\n      setTotalPrice(0);\n      return;\n    }\n\n    const baseSquares = Math.round(parseInt(sqFt) / 100);\n    const wastePercentage = waste === '' ? 0 : parseInt(waste) / 100;\n    const adjustedSquares = Math.round(baseSquares * (1 + wastePercentage));\n    setSquares(adjustedSquares);\n\n    const pricePerSquare = pricePerSq === '' ? 0 : parseInt(pricePerSq);\n    const calculatedTotal = adjustedSquares * pricePerSquare;\n    setTotalPrice(calculatedTotal);\n  };\n\n  useEffect(() => {\n    calculateSquaresAndTotal();\n  }, [sqFt, waste, pricePerSq]);\n\n  const handlePricePerSqChange = (e) => {\n    const value = e.target.value;\n    // Allow empty string or any number\n    if (value === '' || !isNaN(value)) {\n      setPricePerSq(value);\n    }\n  };\n\n  const handlePricePerSqBlur = () => {\n    if (pricePerSq === '') {\n      return;  // Keep it empty if no input\n    }\n    \n    let value = parseInt(pricePerSq);\n    if (isNaN(value) || value < 50) {\n      setPricePerSq('50');\n    } else if (value > 1000) {\n      setPricePerSq('1000');\n    } else {\n      setPricePerSq(value.toString());\n    }\n  };\n\n  const handleSqFtChange = (e) => {\n    const value = e.target.value;\n    // Allow empty string or any number\n    if (value === '' || !isNaN(value)) {\n      setSqFt(value);\n      if (value !== '') {\n        const numValue = parseInt(value);\n        setSquares(Math.round(numValue / 100));\n      } else {\n        setSquares(0);  // Set squares to 0 when input is empty\n      }\n    }\n  };\n\n  const handleSqFtBlur = () => {\n    if (sqFt === '') {\n      setSquares(0);\n      return;\n    }\n    \n    let value = parseInt(sqFt);\n    if (isNaN(value) || value < 100) {\n      setSqFt('100');\n      setSquares(1);\n    } else if (value > 100000) {\n      setSqFt('100000');\n      setSquares(1000);\n    } else {\n      setSqFt(value.toString());\n      setSquares(Math.round(value / 100));\n    }\n    calculateSquaresAndTotal();\n  };\n\n  const handleWasteChange = (e) => {\n    const value = e.target.value;\n    // Allow empty string or any number\n    if (value === '' || !isNaN(value)) {\n      setWaste(value);\n    }\n  };\n\n  const handleWasteBlur = () => {\n    if (waste === '') {\n      return;  // Keep it empty if no input\n    }\n    \n    let value = parseInt(waste);\n    if (isNaN(value) || value < 0) {\n      setWaste('0');\n    } else if (value > 50) {\n      setWaste('50');\n    } else {\n      // Round to nearest 5\n      value = Math.round(value / 5) * 5;\n      setWaste(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n\n  return (\n    <div className=\"calculator\">\n      <h1>Roof Calculator</h1>\n      \n      <div className=\"input-group\">\n        <label>Price/Sq ($)</label>\n        <input \n          type=\"number\" \n          value={pricePerSq} \n          onChange={handlePricePerSqChange}\n          onBlur={handlePricePerSqBlur}\n          min=\"50\"\n          max=\"1000\"\n          step=\"1\"\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label>Sq/ft</label>\n        <input \n          type=\"number\" \n          value={sqFt} \n          onChange={handleSqFtChange}\n          onBlur={handleSqFtBlur}\n          min=\"100\"\n          max=\"100000\"\n          step=\"1\"\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label>Waste (%)</label>\n        <input \n          type=\"number\" \n          value={waste} \n          onChange={handleWasteChange}\n          onBlur={handleWasteBlur}\n          min=\"0\"\n          max=\"50\"\n          step=\"5\"\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label>Pitch</label>\n        <select value={pitch} onChange={(e) => setPitch(e.target.value)}>\n          <option value=\"0\">0</option>\n          <option value=\"0-6\">0-6</option>\n          <option value=\"7-9\">7-9</option>\n          <option value=\"10-12\">10-12</option>\n          <option value=\"13+\">13+</option>\n        </select>\n      </div>\n\n      {Object.entries(pitchPrices).map(([key, value]) => (\n        <div key={key} className=\"pitch-price\">\n          <label>{key}:</label>\n          <span>$ {value}</span>\n        </div>\n      ))}\n\n      <div className=\"input-group\">\n        <label>Warranty</label>\n        <select value={warranty} onChange={(e) => setWarranty(e.target.value)}>\n          <option value=\"Golden Pledge\">Golden Pledge</option>\n          <option value=\"Silver Pledge\">Silver Pledge</option>\n        </select>\n        <span>$ 17</span>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Home Type</label>\n        {Object.keys(homeTypePrices).map((type) => (\n          <div key={type}>\n            <input\n              type=\"radio\"\n              id={type}\n              name=\"homeType\"\n              value={type}\n              checked={homeType === type}\n              onChange={(e) => setHomeType(e.target.value)}\n            />\n            <label htmlFor={type}>{type}</label>\n            {type !== 'Single-Story Home' && <span>$ {homeTypePrices[type]}</span>}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"input-group\">\n        <label>Adders</label>\n        <select value={adder} onChange={(e) => setAdder(e.target.value)}>\n          <option value=\"Select an adder\">Select an adder</option>\n          {/* Add more adder options here */}\n        </select>\n      </div>\n\n      <div className=\"results\">\n        <div>Squares: {squares}</div>\n        <div>Total Price: ${totalPrice.toFixed(2)}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default RoofCalculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}