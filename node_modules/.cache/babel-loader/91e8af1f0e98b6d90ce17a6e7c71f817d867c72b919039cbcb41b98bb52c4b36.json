{"ast":null,"code":"var _jsxFileName = \"/home/trippl/roof-calc-app/src/RoofCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './RoofCalculator.css'; // Make sure to create this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoofCalculator = () => {\n  _s();\n  const [pricePerSq, setPricePerSq] = useState(450);\n  const [sqFt, setSqFt] = useState(''); // Initialize to empty string\n  const [waste, setWaste] = useState('10%');\n  const [pitch, setPitch] = useState('0');\n  const [warranty, setWarranty] = useState('Golden Pledge');\n  const [homeType, setHomeType] = useState('Single-Story Home');\n  const [adder, setAdder] = useState('Select an adder');\n  const [squares, setSquares] = useState(0); // Initialize squares to 0\n  const [totalPrice, setTotalPrice] = useState(0);\n  const pitchPrices = {\n    '0-6': 0,\n    '7-9': 35,\n    '10-12': 55,\n    '13+': 90\n  };\n  const homeTypePrices = {\n    'Single-Story Home': 0,\n    '2-Story Home (+$/sq)': 5,\n    '3-Story Home (+$/sq)': 35\n  };\n  useEffect(() => {\n    calculateTotal();\n  }, [pricePerSq, sqFt, waste, pitch, warranty, homeType, adder]);\n  const calculateTotal = () => {\n    const wastePercentage = parseInt(waste) / 100;\n    const adjustedSquares = squares * (1 + wastePercentage);\n    let total = adjustedSquares * pricePerSq;\n    total += adjustedSquares * (pitchPrices[pitch] || 0);\n    total += adjustedSquares * (homeTypePrices[homeType] || 0);\n\n    // Add warranty cost (assuming it's a flat fee)\n    total += warranty === 'Golden Pledge' ? 17 : 0; // Adjust this based on your actual warranty pricing\n\n    // Adder calculation would go here if implemented\n\n    setTotalPrice(isNaN(total) ? 0 : total);\n  };\n  const handlePricePerSqChange = e => {\n    const value = e.target.value;\n    // Allow empty string or any number\n    if (value === '' || !isNaN(value)) {\n      setPricePerSq(value);\n    }\n  };\n  const handlePricePerSqBlur = () => {\n    let value = parseInt(pricePerSq);\n    if (isNaN(value) || value < 50) {\n      setPricePerSq(50);\n    } else if (value > 1000) {\n      setPricePerSq(1000);\n    } else {\n      setPricePerSq(value);\n    }\n  };\n  const handleSqFtChange = e => {\n    const value = e.target.value;\n    // Allow empty string or any number\n    if (value === '' || !isNaN(value)) {\n      setSqFt(value);\n      if (value !== '') {\n        const numValue = parseInt(value);\n        setSquares(Math.round(numValue / 100));\n      } else {\n        setSquares(0); // Set squares to 0 when input is empty\n      }\n    }\n  };\n  const handleSqFtBlur = () => {\n    if (sqFt === '') {\n      setSquares(0);\n      return;\n    }\n    let value = parseInt(sqFt);\n    if (isNaN(value) || value < 100) {\n      setSqFt('100');\n      setSquares(1);\n    } else if (value > 100000) {\n      setSqFt('100000');\n      setSquares(1000);\n    } else {\n      setSqFt(value.toString());\n      setSquares(Math.round(value / 100));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Roof Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price/Sq ($)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: pricePerSq,\n        onChange: handlePricePerSqChange,\n        onBlur: handlePricePerSqBlur,\n        min: \"50\",\n        max: \"1000\",\n        step: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sq/ft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: sqFt,\n        onChange: handleSqFtChange,\n        onBlur: handleSqFtBlur,\n        min: \"100\",\n        max: \"100000\",\n        step: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Waste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: waste,\n        onChange: e => setWaste(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10%\",\n          children: \"10%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"15%\",\n          children: \"15%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"20%\",\n          children: \"20%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pitch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pitch,\n        onChange: e => setPitch(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0-6\",\n          children: \"0-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"7-9\",\n          children: \"7-9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"10-12\",\n          children: \"10-12\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"13+\",\n          children: \"13+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), Object.entries(pitchPrices).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pitch-price\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [key, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"$ \", value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Warranty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: warranty,\n        onChange: e => setWarranty(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Golden Pledge\",\n          children: \"Golden Pledge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Silver Pledge\",\n          children: \"Silver Pledge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"$ 17\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Home Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), Object.keys(homeTypePrices).map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: type,\n          name: \"homeType\",\n          value: type,\n          checked: homeType === type,\n          onChange: e => setHomeType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: type,\n          children: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), type !== 'Single-Story Home' && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"$ \", homeTypePrices[type]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 46\n        }, this)]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Adders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: adder,\n        onChange: e => setAdder(e.target.value),\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Select an adder\",\n          children: \"Select an adder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Squares: \", squares]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Total Price: $\", totalPrice.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(RoofCalculator, \"wGNnDFJ58Pm9qGpLmP2NywmjV3c=\");\n_c = RoofCalculator;\nexport default RoofCalculator;\nvar _c;\n$RefreshReg$(_c, \"RoofCalculator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RoofCalculator","_s","pricePerSq","setPricePerSq","sqFt","setSqFt","waste","setWaste","pitch","setPitch","warranty","setWarranty","homeType","setHomeType","adder","setAdder","squares","setSquares","totalPrice","setTotalPrice","pitchPrices","homeTypePrices","calculateTotal","wastePercentage","parseInt","adjustedSquares","total","isNaN","handlePricePerSqChange","e","value","target","handlePricePerSqBlur","handleSqFtChange","numValue","Math","round","handleSqFtBlur","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onBlur","min","max","step","Object","entries","map","key","keys","id","name","checked","htmlFor","toFixed","_c","$RefreshReg$"],"sources":["/home/trippl/roof-calc-app/src/RoofCalculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './RoofCalculator.css'; // Make sure to create this CSS file\n\nconst RoofCalculator = () => {\n  const [pricePerSq, setPricePerSq] = useState(450);\n  const [sqFt, setSqFt] = useState('');  // Initialize to empty string\n  const [waste, setWaste] = useState('10%');\n  const [pitch, setPitch] = useState('0');\n  const [warranty, setWarranty] = useState('Golden Pledge');\n  const [homeType, setHomeType] = useState('Single-Story Home');\n  const [adder, setAdder] = useState('Select an adder');\n  const [squares, setSquares] = useState(0);  // Initialize squares to 0\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  const pitchPrices = {\n    '0-6': 0,\n    '7-9': 35,\n    '10-12': 55,\n    '13+': 90\n  };\n\n  const homeTypePrices = {\n    'Single-Story Home': 0,\n    '2-Story Home (+$/sq)': 5,\n    '3-Story Home (+$/sq)': 35\n  };\n\n  useEffect(() => {\n    calculateTotal();\n  }, [pricePerSq, sqFt, waste, pitch, warranty, homeType, adder]);\n\n  const calculateTotal = () => {\n    const wastePercentage = parseInt(waste) / 100;\n    const adjustedSquares = squares * (1 + wastePercentage);\n\n    let total = adjustedSquares * pricePerSq;\n    total += adjustedSquares * (pitchPrices[pitch] || 0);\n    total += adjustedSquares * (homeTypePrices[homeType] || 0);\n    \n    // Add warranty cost (assuming it's a flat fee)\n    total += warranty === 'Golden Pledge' ? 17 : 0; // Adjust this based on your actual warranty pricing\n\n    // Adder calculation would go here if implemented\n\n    setTotalPrice(isNaN(total) ? 0 : total);\n  };\n\n  const handlePricePerSqChange = (e) => {\n    const value = e.target.value;\n    // Allow empty string or any number\n    if (value === '' || !isNaN(value)) {\n      setPricePerSq(value);\n    }\n  };\n\n  const handlePricePerSqBlur = () => {\n    let value = parseInt(pricePerSq);\n    if (isNaN(value) || value < 50) {\n      setPricePerSq(50);\n    } else if (value > 1000) {\n      setPricePerSq(1000);\n    } else {\n      setPricePerSq(value);\n    }\n  };\n\n  const handleSqFtChange = (e) => {\n    const value = e.target.value;\n    // Allow empty string or any number\n    if (value === '' || !isNaN(value)) {\n      setSqFt(value);\n      if (value !== '') {\n        const numValue = parseInt(value);\n        setSquares(Math.round(numValue / 100));\n      } else {\n        setSquares(0);  // Set squares to 0 when input is empty\n      }\n    }\n  };\n\n  const handleSqFtBlur = () => {\n    if (sqFt === '') {\n      setSquares(0);\n      return;\n    }\n    \n    let value = parseInt(sqFt);\n    if (isNaN(value) || value < 100) {\n      setSqFt('100');\n      setSquares(1);\n    } else if (value > 100000) {\n      setSqFt('100000');\n      setSquares(1000);\n    } else {\n      setSqFt(value.toString());\n      setSquares(Math.round(value / 100));\n    }\n  };\n\n  return (\n    <div className=\"calculator\">\n      <h1>Roof Calculator</h1>\n      \n      <div className=\"input-group\">\n        <label>Price/Sq ($)</label>\n        <input \n          type=\"number\" \n          value={pricePerSq} \n          onChange={handlePricePerSqChange}\n          onBlur={handlePricePerSqBlur}\n          min=\"50\"\n          max=\"1000\"\n          step=\"1\"\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label>Sq/ft</label>\n        <input \n          type=\"number\" \n          value={sqFt} \n          onChange={handleSqFtChange}\n          onBlur={handleSqFtBlur}\n          min=\"100\"\n          max=\"100000\"\n          step=\"1\"\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label>Waste</label>\n        <select value={waste} onChange={(e) => setWaste(e.target.value)}>\n          <option value=\"10%\">10%</option>\n          <option value=\"15%\">15%</option>\n          <option value=\"20%\">20%</option>\n        </select>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Pitch</label>\n        <select value={pitch} onChange={(e) => setPitch(e.target.value)}>\n          <option value=\"0\">0</option>\n          <option value=\"0-6\">0-6</option>\n          <option value=\"7-9\">7-9</option>\n          <option value=\"10-12\">10-12</option>\n          <option value=\"13+\">13+</option>\n        </select>\n      </div>\n\n      {Object.entries(pitchPrices).map(([key, value]) => (\n        <div key={key} className=\"pitch-price\">\n          <label>{key}:</label>\n          <span>$ {value}</span>\n        </div>\n      ))}\n\n      <div className=\"input-group\">\n        <label>Warranty</label>\n        <select value={warranty} onChange={(e) => setWarranty(e.target.value)}>\n          <option value=\"Golden Pledge\">Golden Pledge</option>\n          <option value=\"Silver Pledge\">Silver Pledge</option>\n        </select>\n        <span>$ 17</span>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Home Type</label>\n        {Object.keys(homeTypePrices).map((type) => (\n          <div key={type}>\n            <input\n              type=\"radio\"\n              id={type}\n              name=\"homeType\"\n              value={type}\n              checked={homeType === type}\n              onChange={(e) => setHomeType(e.target.value)}\n            />\n            <label htmlFor={type}>{type}</label>\n            {type !== 'Single-Story Home' && <span>$ {homeTypePrices[type]}</span>}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"input-group\">\n        <label>Adders</label>\n        <select value={adder} onChange={(e) => setAdder(e.target.value)}>\n          <option value=\"Select an adder\">Select an adder</option>\n          {/* Add more adder options here */}\n        </select>\n      </div>\n\n      <div className=\"results\">\n        <div>Squares: {squares}</div>\n        <div>Total Price: ${totalPrice.toFixed(2)}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default RoofCalculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}