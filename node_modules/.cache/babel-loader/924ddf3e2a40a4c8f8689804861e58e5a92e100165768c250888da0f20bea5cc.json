{"ast":null,"code":"var _jsxFileName = \"/home/trippl/roof-calc-app/src/RoofCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './RoofCalculator.css'; // Make sure to create this CSS file\nimport { debounce } from 'lodash'; // Make sure to install lodash\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoofCalculator = () => {\n  _s();\n  const [pricePerSq, setPricePerSq] = useState(''); // Initialize to empty string\n  const [sqFt, setSqFt] = useState('100');\n  const [waste, setWaste] = useState(''); // Initialize to empty string\n  const [pitch, setPitch] = useState('0-6');\n  const [warranty, setWarranty] = useState('Golden Pledge');\n  const [warrantyPrice, setWarrantyPrice] = useState('15');\n  const [homeType, setHomeType] = useState('single');\n  const [homeTypePrice, setHomeTypePrice] = useState('0');\n  const [twoStoryPrice, setTwoStoryPrice] = useState('5');\n  const [threeStoryPrice, setThreeStoryPrice] = useState('35');\n  const [adder, setAdder] = useState('none');\n  const [adderQuantity, setAdderQuantity] = useState('0');\n  const [squares, setSquares] = useState(0); // Initialize squares to 0\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [pitchPrice, setPitchPrice] = useState('0');\n  const [selectedAdders, setSelectedAdders] = useState({});\n  const [customAdderName, setCustomAdderName] = useState('');\n  const [customAdderPrice, setCustomAdderPrice] = useState(0);\n  const [isCustomAdder, setIsCustomAdder] = useState(false);\n  const [selectedAdder, setSelectedAdder] = useState('');\n  const [customUnit, setCustomUnit] = useState('');\n  const [customQuantity, setCustomQuantity] = useState(1);\n\n  // Define default values\n  const defaultValues = {\n    sqFt: '',\n    waste: '10',\n    pricePerSq: '',\n    pitch: '0-6',\n    pitchPrice: '0',\n    homeType: 'single',\n    homeTypePrice: '0',\n    warranty: 'Golden Pledge',\n    warrantyPrice: '15',\n    adder: 'none',\n    adderQuantity: '0'\n  };\n\n  // Function to reset all fields to default values\n  // const handleClear = () => { ... };\n\n  const pitchOptions = {\n    '0-6': '0',\n    '7-9': '35',\n    '10-12': '55',\n    '13+': '90'\n  };\n  const homeTypePrices = {\n    'Single-Story Home': 0,\n    '2-Story Home (+$/sq)': 5,\n    '3-Story Home (+$/sq)': 35\n  };\n  const warrantyOptions = {\n    'Golden Pledge': '15',\n    'Silver Pledge': '11',\n    'Systems': '8'\n  };\n  const homeTypeOptions = {\n    'single': {\n      label: 'Single-Story',\n      price: '0'\n    },\n    'two-story': {\n      label: '2-Story',\n      price: '10'\n    },\n    'three-story': {\n      label: '3-Story',\n      price: '35'\n    }\n  };\n  const adderOptions = {\n    'none': {\n      label: 'Select an Adder',\n      price: '0'\n    },\n    'ultimate_pipe_boot': {\n      label: 'Ultimate Pipe Boot (Neoprene)',\n      price: '100',\n      unit: 'Boot'\n    },\n    'soffit': {\n      label: 'Soffit (under 12\")',\n      price: '18',\n      unit: 'Ft'\n    },\n    'gutters_1story': {\n      label: 'Gutters (5\"-6\" 1-Story)',\n      price: '12',\n      unit: 'Ft'\n    },\n    'gutters_2story': {\n      label: 'Gutters (5\"-6\" 2-story)',\n      price: '15',\n      unit: 'Ft'\n    },\n    'osb': {\n      label: 'OSB (Plywood Layer)',\n      price: '100',\n      unit: 'Sheet'\n    }\n  };\n  const calculateTotal = () => {\n    let total = 0;\n    const currentSquares = parseFloat(sqFt) / 100; // Convert sq ft to squares\n\n    // Base calculation\n    const baseSquares = Math.round(parseFloat(sqFt) / 100) || 0;\n    const adjustedSquares = Math.round(baseSquares * (1 + (parseFloat(waste) || 0) / 100));\n    total += adjustedSquares * (parseFloat(pricePerSq) || 0);\n\n    // Add pitch price\n    total += adjustedSquares * (parseFloat(pitchPrice) || 0);\n\n    // Add home type price\n    total += adjustedSquares * (parseFloat(homeTypePrice) || 0);\n\n    // Add warranty price\n    total += adjustedSquares * (parseFloat(warrantyPrice) || 0);\n\n    // Add adder prices\n    Object.entries(selectedAdders).forEach(([adderKey, quantity]) => {\n      const adderPrice = parseFloat(adderOptions[adderKey].price);\n      total += adderPrice * quantity;\n    });\n\n    // Custom Adder calculations with quantity\n    if (isCustomAdder && customAdderPrice) {\n      const price = parseFloat(customAdderPrice);\n      const quantity = parseInt(customQuantity) || 1; // Default to 1 if invalid\n\n      switch (customUnit) {\n        case '/Each':\n          total += price * quantity;\n          break;\n        case '/Sq':\n          total += price * currentSquares * quantity;\n          break;\n        case '/Ft':\n          total += price * parseFloat(sqFt) * quantity;\n          break;\n        case 'Sq/Ft':\n          total += price * parseFloat(sqFt) * quantity;\n          break;\n        case '/Sheet':\n          total += price * (parseFloat(sqFt) / 32) * quantity;\n          break;\n        default:\n          break;\n      }\n    }\n    setTotalPrice(total);\n    setSquares(adjustedSquares);\n  };\n\n  // Call calculateTotal whenever any input changes\n  useEffect(() => {\n    calculateTotal();\n  }, [sqFt, waste, pricePerSq, pitchPrice, homeTypePrice, warrantyPrice, selectedAdders]);\n\n  // Debounced calculation function\n  const debouncedCalculate = debounce(calculateTotal, 300);\n\n  // Input validation example\n  const handleNumericInput = (e, setter, min = 0, max = Infinity) => {\n    const value = e.target.value;\n    if (value === '' || parseFloat(value) >= min && parseFloat(value) <= max) {\n      setter(value);\n    }\n  };\n  useEffect(() => {\n    calculateTotal();\n  }, [sqFt, waste, pricePerSq]);\n  const handlePricePerSqChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPricePerSq(value);\n      calculateTotal();\n    }\n  };\n  const handlePricePerSqBlur = () => {\n    if (pricePerSq === '') return;\n    let value = parseInt(pricePerSq);\n    if (isNaN(value) || value < 50) {\n      setPricePerSq('50');\n    } else if (value > 1000) {\n      setPricePerSq('1000');\n    } else {\n      setPricePerSq(value.toString());\n    }\n    calculateTotal();\n  };\n  const handleSqFtChange = useCallback(e => {\n    const value = e.target.value;\n    setSqFt(value);\n    debouncedCalculate();\n  }, [debouncedCalculate]);\n  const handleSqFtBlur = () => {\n    let value = parseFloat(sqFt);\n    if (isNaN(value) || value < 100) {\n      setSqFt('100');\n    } else if (value > 100000) {\n      setSqFt('100000');\n    } else {\n      setSqFt(Math.round(value).toString());\n    }\n    calculateTotal();\n  };\n\n  // Add this new function to handle increment/decrement\n  const handleSqFtAdjust = increment => {\n    let value = parseInt(sqFt) || 0;\n    value += increment;\n    if (value < 100) value = 100;\n    if (value > 100000) value = 100000;\n    setSqFt(value.toString());\n    calculateTotal();\n  };\n  const handleWasteChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWaste(value);\n      calculateTotal();\n    }\n  };\n  const handleWasteBlur = () => {\n    if (waste === '') return;\n    let value = parseInt(waste);\n    if (isNaN(value) || value < 0) {\n      setWaste('0');\n    } else if (value > 50) {\n      setWaste('50');\n    } else {\n      value = Math.round(value / 5) * 5;\n      setWaste(value.toString());\n    }\n    calculateTotal();\n  };\n  const handlePitchChange = e => {\n    const selectedPitch = e.target.value;\n    setPitch(selectedPitch);\n    setPitchPrice(pitchOptions[selectedPitch]);\n    calculateTotal();\n  };\n  const handlePitchPriceChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPitchPrice(value);\n      calculateTotal();\n    }\n  };\n  const handlePitchPriceBlur = () => {\n    let value = parseInt(pitchPrice);\n    if (isNaN(value) || value < 0) {\n      setPitchPrice('0');\n    } else if (value > 1000) {\n      setPitchPrice('1000');\n    } else {\n      setPitchPrice(value.toString());\n    }\n    calculateTotal();\n  };\n  const handleWarrantyChange = e => {\n    const selectedWarranty = e.target.value;\n    setWarranty(selectedWarranty);\n    setWarrantyPrice(warrantyOptions[selectedWarranty]);\n    calculateTotal();\n  };\n  const handleWarrantyPriceChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWarrantyPrice(value);\n      calculateTotal();\n    }\n  };\n  const handleWarrantyPriceBlur = () => {\n    let value = parseInt(warrantyPrice);\n    if (isNaN(value) || value < 0) {\n      setWarrantyPrice('0');\n    } else if (value > 1000) {\n      setWarrantyPrice('1000');\n    } else {\n      setWarrantyPrice(value.toString());\n    }\n    calculateTotal();\n  };\n  const handleHomeTypeChange = e => {\n    const selectedType = e.target.value;\n    setHomeType(selectedType);\n    setHomeTypePrice(homeTypeOptions[selectedType].price);\n    calculateTotal();\n  };\n  const handleHomeTypePriceChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setHomeTypePrice(value);\n      calculateTotal();\n    }\n  };\n  const handleHomeTypePriceBlur = () => {\n    let value = parseInt(homeTypePrice);\n    if (isNaN(value) || value < 0) {\n      setHomeTypePrice('0');\n    } else if (value > 1000) {\n      setHomeTypePrice('1000');\n    } else {\n      setHomeTypePrice(value.toString());\n    }\n    calculateTotal();\n  };\n  const handleAdderChange = e => {\n    const selectedAdder = e.target.value;\n    setSelectedAdder(selectedAdder);\n    if (selectedAdder === 'custom') {\n      setIsCustomAdder(true);\n    } else if (selectedAdder !== 'none') {\n      setSelectedAdders(prev => ({\n        ...prev,\n        [selectedAdder]: 1\n      }));\n      setIsCustomAdder(false);\n    }\n    calculateTotal();\n  };\n  const handleAdderQuantityChange = (adderKey, value) => {\n    if (value === '' || !isNaN(value) && parseInt(value) >= 0) {\n      setSelectedAdders(prev => ({\n        ...prev,\n        [adderKey]: value\n      }));\n      calculateTotal();\n    }\n  };\n  const handleAdderQuantityBlur = adderKey => {\n    let value = parseInt(selectedAdders[adderKey]);\n    if (isNaN(value) || value < 0) {\n      value = 0;\n    } else if (value > 1000) {\n      value = 1000;\n    }\n    setSelectedAdders(prev => ({\n      ...prev,\n      [adderKey]: value.toString()\n    }));\n    calculateTotal();\n  };\n  const removeAdder = adderKey => {\n    setSelectedAdders(prev => {\n      const newAdders = {\n        ...prev\n      };\n      delete newAdders[adderKey];\n      return newAdders;\n    });\n    calculateTotal();\n  };\n  const handleCustomAdderPrice = e => {\n    const value = e.target.value;\n    setCustomAdderPrice(value);\n    calculateTotal();\n  };\n  const handleCustomAdderName = e => {\n    setCustomAdderName(e.target.value);\n  };\n  const handleUnitChange = e => {\n    setCustomUnit(e.target.value);\n    calculateTotal();\n  };\n  const handleQuantityChange = e => {\n    setCustomQuantity(parseInt(e.target.value));\n    calculateTotal();\n  };\n  const MemoizedInputGroup = /*#__PURE__*/React.memo(({\n    label,\n    value,\n    onChange,\n    ...props\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: value,\n      onChange: onChange,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 376,\n    columnNumber: 5\n  }, this));\n  const clearCalculator = () => {\n    setSqFt('');\n    setWaste('10');\n    setPricePerSq('');\n    setPitch('0-6');\n    setPitchPrice('0');\n    setHomeType('single');\n    setHomeTypePrice('0');\n    setWarranty('Golden Pledge');\n    setWarrantyPrice('15');\n    setAdder('none');\n    setAdderQuantity('0');\n    setSquares(0);\n    setTotalPrice(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Roof Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"horizontal-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"horizontal-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Price/Sq ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: pricePerSq,\n          onChange: handlePricePerSqChange,\n          onBlur: handlePricePerSqBlur,\n          min: \"50\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"horizontal-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sq/ft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: sqFt,\n          onChange: handleSqFtChange,\n          onBlur: handleSqFtBlur,\n          min: \"100\",\n          max: \"100000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"horizontal-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Waste (%)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: waste,\n          onChange: handleWasteChange,\n          onBlur: handleWasteBlur,\n          min: \"0\",\n          max: \"50\",\n          step: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pitch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pitch,\n        onChange: handlePitchChange,\n        children: Object.keys(pitchOptions).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: pitchPrice,\n          onChange: handlePitchPriceChange,\n          onBlur: handlePitchPriceBlur,\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"/Sq\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Warranty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: warranty,\n        onChange: handleWarrantyChange,\n        children: Object.keys(warrantyOptions).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: warrantyPrice,\n          onChange: handleWarrantyPriceChange,\n          onBlur: handleWarrantyPriceBlur,\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"/Sq\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Home Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: homeType,\n        onChange: handleHomeTypeChange,\n        children: Object.entries(homeTypeOptions).map(([key, {\n          label,\n          price\n        }]) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key === 'single' ? label : `${label} +($${price})`\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: homeTypePrice,\n          onChange: handleHomeTypePriceChange,\n          onBlur: handleHomeTypePriceBlur,\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"/Sq\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"adders-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Adders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adders-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedAdder,\n          onChange: handleAdderChange,\n          className: \"adder-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"none\",\n            children: \"Select an Adder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this), Object.entries(adderOptions).map(([key, {\n            label\n          }]) => key !== 'none' && /*#__PURE__*/_jsxDEV(\"option\", {\n            value: key,\n            children: label\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"custom\",\n            children: \"Custom Adder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), isCustomAdder && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-adder-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Adder Name\",\n            value: customAdderName,\n            onChange: handleCustomAdderName,\n            className: \"custom-adder-name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-adder-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"price-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: customAdderPrice,\n                onChange: handleCustomAdderPrice,\n                placeholder: \"\",\n                className: \"standard-price-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 539,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: customUnit,\n              onChange: handleUnitChange,\n              className: \"standard-price-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"/Sq\",\n                children: \"/Sq\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"/Each\",\n                children: \"/Each\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"/Ft\",\n                children: \"/Ft\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Sq/Ft\",\n                children: \"/Sq/Ft\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"/Sheet\",\n                children: \"/Sheet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 557,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"qty-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Qty:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: customQuantity,\n                onChange: e => setCustomQuantity(e.target.value),\n                min: \"1\",\n                max: \"1000\",\n                className: \"standard-price-input\",\n                placeholder: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this), Object.entries(selectedAdders).map(([adderKey, quantity]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group selected-adder\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: adderOptions[adderKey].label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"adder-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: quantity,\n          onChange: e => handleAdderQuantityChange(adderKey, e.target.value),\n          onBlur: () => handleAdderQuantityBlur(adderKey),\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [adderOptions[adderKey].unit, \"(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-adder\",\n          onClick: () => removeAdder(adderKey),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 11\n      }, this)]\n    }, adderKey, true, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Squares: \", squares]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Price: $\", totalPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-button clear-button-red\",\n        onClick: clearCalculator,\n        children: \"CLEAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 5\n  }, this);\n};\n_s(RoofCalculator, \"r1MWmxJRelF9oVTJTT5RgsVDsA8=\");\n_c = RoofCalculator;\nexport default RoofCalculator;\nvar _c;\n$RefreshReg$(_c, \"RoofCalculator\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","debounce","jsxDEV","_jsxDEV","RoofCalculator","_s","pricePerSq","setPricePerSq","sqFt","setSqFt","waste","setWaste","pitch","setPitch","warranty","setWarranty","warrantyPrice","setWarrantyPrice","homeType","setHomeType","homeTypePrice","setHomeTypePrice","twoStoryPrice","setTwoStoryPrice","threeStoryPrice","setThreeStoryPrice","adder","setAdder","adderQuantity","setAdderQuantity","squares","setSquares","totalPrice","setTotalPrice","pitchPrice","setPitchPrice","selectedAdders","setSelectedAdders","customAdderName","setCustomAdderName","customAdderPrice","setCustomAdderPrice","isCustomAdder","setIsCustomAdder","selectedAdder","setSelectedAdder","customUnit","setCustomUnit","customQuantity","setCustomQuantity","defaultValues","pitchOptions","homeTypePrices","warrantyOptions","homeTypeOptions","label","price","adderOptions","unit","calculateTotal","total","currentSquares","parseFloat","baseSquares","Math","round","adjustedSquares","Object","entries","forEach","adderKey","quantity","adderPrice","parseInt","debouncedCalculate","handleNumericInput","e","setter","min","max","Infinity","value","target","handlePricePerSqChange","isNaN","handlePricePerSqBlur","toString","handleSqFtChange","handleSqFtBlur","handleSqFtAdjust","increment","handleWasteChange","handleWasteBlur","handlePitchChange","selectedPitch","handlePitchPriceChange","handlePitchPriceBlur","handleWarrantyChange","selectedWarranty","handleWarrantyPriceChange","handleWarrantyPriceBlur","handleHomeTypeChange","selectedType","handleHomeTypePriceChange","handleHomeTypePriceBlur","handleAdderChange","prev","handleAdderQuantityChange","handleAdderQuantityBlur","removeAdder","newAdders","handleCustomAdderPrice","handleCustomAdderName","handleUnitChange","handleQuantityChange","MemoizedInputGroup","memo","onChange","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","clearCalculator","type","onBlur","step","keys","map","key","placeholder","onClick","toFixed","_c","$RefreshReg$"],"sources":["/home/trippl/roof-calc-app/src/RoofCalculator.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './RoofCalculator.css'; // Make sure to create this CSS file\nimport { debounce } from 'lodash'; // Make sure to install lodash\n\nconst RoofCalculator = () => {\n  const [pricePerSq, setPricePerSq] = useState('');  // Initialize to empty string\n  const [sqFt, setSqFt] = useState('100');\n  const [waste, setWaste] = useState('');  // Initialize to empty string\n  const [pitch, setPitch] = useState('0-6');\n  const [warranty, setWarranty] = useState('Golden Pledge');\n  const [warrantyPrice, setWarrantyPrice] = useState('15');\n  const [homeType, setHomeType] = useState('single');\n  const [homeTypePrice, setHomeTypePrice] = useState('0');\n  const [twoStoryPrice, setTwoStoryPrice] = useState('5');\n  const [threeStoryPrice, setThreeStoryPrice] = useState('35');\n  const [adder, setAdder] = useState('none');\n  const [adderQuantity, setAdderQuantity] = useState('0');\n  const [squares, setSquares] = useState(0);  // Initialize squares to 0\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [pitchPrice, setPitchPrice] = useState('0');\n  const [selectedAdders, setSelectedAdders] = useState({});\n  const [customAdderName, setCustomAdderName] = useState('');\n  const [customAdderPrice, setCustomAdderPrice] = useState(0);\n  const [isCustomAdder, setIsCustomAdder] = useState(false);\n  const [selectedAdder, setSelectedAdder] = useState('');\n  const [customUnit, setCustomUnit] = useState('');\n  const [customQuantity, setCustomQuantity] = useState(1);\n\n  // Define default values\n  const defaultValues = {\n    sqFt: '',\n    waste: '10',\n    pricePerSq: '',\n    pitch: '0-6',\n    pitchPrice: '0',\n    homeType: 'single',\n    homeTypePrice: '0',\n    warranty: 'Golden Pledge',\n    warrantyPrice: '15',\n    adder: 'none',\n    adderQuantity: '0'\n  };\n\n  // Function to reset all fields to default values\n  // const handleClear = () => { ... };\n\n  const pitchOptions = {\n    '0-6': '0',\n    '7-9': '35',\n    '10-12': '55',\n    '13+': '90'\n  };\n\n  const homeTypePrices = {\n    'Single-Story Home': 0,\n    '2-Story Home (+$/sq)': 5,\n    '3-Story Home (+$/sq)': 35\n  };\n\n  const warrantyOptions = {\n    'Golden Pledge': '15',\n    'Silver Pledge': '11',\n    'Systems': '8'\n  };\n\n  const homeTypeOptions = {\n    'single': { label: 'Single-Story', price: '0' },\n    'two-story': { label: '2-Story', price: '10' },\n    'three-story': { label: '3-Story', price: '35' }\n  };\n\n  const adderOptions = {\n    'none': { label: 'Select an Adder', price: '0' },\n    'ultimate_pipe_boot': { label: 'Ultimate Pipe Boot (Neoprene)', price: '100', unit: 'Boot' },\n    'soffit': { label: 'Soffit (under 12\")', price: '18', unit: 'Ft' },\n    'gutters_1story': { label: 'Gutters (5\"-6\" 1-Story)', price: '12', unit: 'Ft' },\n    'gutters_2story': { label: 'Gutters (5\"-6\" 2-story)', price: '15', unit: 'Ft' },\n    'osb': { label: 'OSB (Plywood Layer)', price: '100', unit: 'Sheet' }\n  };\n\n  const calculateTotal = () => {\n    let total = 0;\n    const currentSquares = parseFloat(sqFt) / 100; // Convert sq ft to squares\n    \n    // Base calculation\n    const baseSquares = Math.round(parseFloat(sqFt) / 100) || 0;\n    const adjustedSquares = Math.round(baseSquares * (1 + (parseFloat(waste) || 0) / 100));\n    total += adjustedSquares * (parseFloat(pricePerSq) || 0);\n\n    // Add pitch price\n    total += adjustedSquares * (parseFloat(pitchPrice) || 0);\n\n    // Add home type price\n    total += adjustedSquares * (parseFloat(homeTypePrice) || 0);\n\n    // Add warranty price\n    total += adjustedSquares * (parseFloat(warrantyPrice) || 0);\n\n    // Add adder prices\n    Object.entries(selectedAdders).forEach(([adderKey, quantity]) => {\n      const adderPrice = parseFloat(adderOptions[adderKey].price);\n      total += adderPrice * quantity;\n    });\n\n    // Custom Adder calculations with quantity\n    if (isCustomAdder && customAdderPrice) {\n      const price = parseFloat(customAdderPrice);\n      const quantity = parseInt(customQuantity) || 1; // Default to 1 if invalid\n\n      switch (customUnit) {\n        case '/Each':\n          total += price * quantity;\n          break;\n        case '/Sq':\n          total += price * currentSquares * quantity;\n          break;\n        case '/Ft':\n          total += price * parseFloat(sqFt) * quantity;\n          break;\n        case 'Sq/Ft':\n          total += price * parseFloat(sqFt) * quantity;\n          break;\n        case '/Sheet':\n          total += price * (parseFloat(sqFt) / 32) * quantity;\n          break;\n        default:\n          break;\n      }\n    }\n\n    setTotalPrice(total);\n    setSquares(adjustedSquares);\n  };\n\n  // Call calculateTotal whenever any input changes\n  useEffect(() => {\n    calculateTotal();\n  }, [sqFt, waste, pricePerSq, pitchPrice, homeTypePrice, warrantyPrice, selectedAdders]);\n\n  // Debounced calculation function\n  const debouncedCalculate = debounce(calculateTotal, 300);\n\n  // Input validation example\n  const handleNumericInput = (e, setter, min = 0, max = Infinity) => {\n    const value = e.target.value;\n    if (value === '' || (parseFloat(value) >= min && parseFloat(value) <= max)) {\n      setter(value);\n    }\n  };\n\n  useEffect(() => {\n    calculateTotal();\n  }, [sqFt, waste, pricePerSq]);\n\n  const handlePricePerSqChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPricePerSq(value);\n      calculateTotal();\n    }\n  };\n\n  const handlePricePerSqBlur = () => {\n    if (pricePerSq === '') return;\n    let value = parseInt(pricePerSq);\n    if (isNaN(value) || value < 50) {\n      setPricePerSq('50');\n    } else if (value > 1000) {\n      setPricePerSq('1000');\n    } else {\n      setPricePerSq(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const handleSqFtChange = useCallback((e) => {\n    const value = e.target.value;\n    setSqFt(value);\n    debouncedCalculate();\n  }, [debouncedCalculate]);\n\n  const handleSqFtBlur = () => {\n    let value = parseFloat(sqFt);\n    if (isNaN(value) || value < 100) {\n      setSqFt('100');\n    } else if (value > 100000) {\n      setSqFt('100000');\n    } else {\n      setSqFt(Math.round(value).toString());\n    }\n    calculateTotal();\n  };\n\n  // Add this new function to handle increment/decrement\n  const handleSqFtAdjust = (increment) => {\n    let value = parseInt(sqFt) || 0;\n    value += increment;\n    if (value < 100) value = 100;\n    if (value > 100000) value = 100000;\n    setSqFt(value.toString());\n    calculateTotal();\n  };\n\n  const handleWasteChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWaste(value);\n      calculateTotal();\n    }\n  };\n\n  const handleWasteBlur = () => {\n    if (waste === '') return;\n    let value = parseInt(waste);\n    if (isNaN(value) || value < 0) {\n      setWaste('0');\n    } else if (value > 50) {\n      setWaste('50');\n    } else {\n      value = Math.round(value / 5) * 5;\n      setWaste(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const handlePitchChange = (e) => {\n    const selectedPitch = e.target.value;\n    setPitch(selectedPitch);\n    setPitchPrice(pitchOptions[selectedPitch]);\n    calculateTotal();\n  };\n\n  const handlePitchPriceChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPitchPrice(value);\n      calculateTotal();\n    }\n  };\n\n  const handlePitchPriceBlur = () => {\n    let value = parseInt(pitchPrice);\n    if (isNaN(value) || value < 0) {\n      setPitchPrice('0');\n    } else if (value > 1000) {\n      setPitchPrice('1000');\n    } else {\n      setPitchPrice(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const handleWarrantyChange = (e) => {\n    const selectedWarranty = e.target.value;\n    setWarranty(selectedWarranty);\n    setWarrantyPrice(warrantyOptions[selectedWarranty]);\n    calculateTotal();\n  };\n\n  const handleWarrantyPriceChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWarrantyPrice(value);\n      calculateTotal();\n    }\n  };\n\n  const handleWarrantyPriceBlur = () => {\n    let value = parseInt(warrantyPrice);\n    if (isNaN(value) || value < 0) {\n      setWarrantyPrice('0');\n    } else if (value > 1000) {\n      setWarrantyPrice('1000');\n    } else {\n      setWarrantyPrice(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const handleHomeTypeChange = (e) => {\n    const selectedType = e.target.value;\n    setHomeType(selectedType);\n    setHomeTypePrice(homeTypeOptions[selectedType].price);\n    calculateTotal();\n  };\n\n  const handleHomeTypePriceChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setHomeTypePrice(value);\n      calculateTotal();\n    }\n  };\n\n  const handleHomeTypePriceBlur = () => {\n    let value = parseInt(homeTypePrice);\n    if (isNaN(value) || value < 0) {\n      setHomeTypePrice('0');\n    } else if (value > 1000) {\n      setHomeTypePrice('1000');\n    } else {\n      setHomeTypePrice(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const handleAdderChange = (e) => {\n    const selectedAdder = e.target.value;\n    setSelectedAdder(selectedAdder);\n    if (selectedAdder === 'custom') {\n      setIsCustomAdder(true);\n    } else if (selectedAdder !== 'none') {\n      setSelectedAdders(prev => ({\n        ...prev,\n        [selectedAdder]: 1\n      }));\n      setIsCustomAdder(false);\n    }\n    calculateTotal();\n  };\n\n  const handleAdderQuantityChange = (adderKey, value) => {\n    if (value === '' || (!isNaN(value) && parseInt(value) >= 0)) {\n      setSelectedAdders(prev => ({\n        ...prev,\n        [adderKey]: value\n      }));\n      calculateTotal();\n    }\n  };\n\n  const handleAdderQuantityBlur = (adderKey) => {\n    let value = parseInt(selectedAdders[adderKey]);\n    if (isNaN(value) || value < 0) {\n      value = 0;\n    } else if (value > 1000) {\n      value = 1000;\n    }\n    setSelectedAdders(prev => ({\n      ...prev,\n      [adderKey]: value.toString()\n    }));\n    calculateTotal();\n  };\n\n  const removeAdder = (adderKey) => {\n    setSelectedAdders(prev => {\n      const newAdders = { ...prev };\n      delete newAdders[adderKey];\n      return newAdders;\n    });\n    calculateTotal();\n  };\n\n  const handleCustomAdderPrice = (e) => {\n    const value = e.target.value;\n    setCustomAdderPrice(value);\n    calculateTotal();\n  };\n\n  const handleCustomAdderName = (e) => {\n    setCustomAdderName(e.target.value);\n  };\n\n  const handleUnitChange = (e) => {\n    setCustomUnit(e.target.value);\n    calculateTotal();\n  };\n\n  const handleQuantityChange = (e) => {\n    setCustomQuantity(parseInt(e.target.value));\n    calculateTotal();\n  };\n\n  const MemoizedInputGroup = React.memo(({ label, value, onChange, ...props }) => (\n    <div className=\"input-group\">\n      <label>{label}</label>\n      <input value={value} onChange={onChange} {...props} />\n    </div>\n  ));\n\n  const clearCalculator = () => {\n    setSqFt('');\n    setWaste('10');\n    setPricePerSq('');\n    setPitch('0-6');\n    setPitchPrice('0');\n    setHomeType('single');\n    setHomeTypePrice('0');\n    setWarranty('Golden Pledge');\n    setWarrantyPrice('15');\n    setAdder('none');\n    setAdderQuantity('0');\n    setSquares(0);\n    setTotalPrice(0);\n  };\n\n  return (\n    <div className=\"calculator\">\n      <h1>Roof Calculator</h1>\n      \n      <div className=\"horizontal-inputs\">\n        <div className=\"horizontal-input-group\">\n          <label>Price/Sq ($)</label>\n          <input \n            type=\"number\" \n            value={pricePerSq} \n            onChange={handlePricePerSqChange}\n            onBlur={handlePricePerSqBlur}\n            min=\"50\"\n            max=\"1000\"\n            step=\"1\"\n          />\n        </div>\n\n        <div className=\"horizontal-input-group\">\n          <label>Sq/ft</label>\n          <input \n            type=\"number\"\n            value={sqFt} \n            onChange={handleSqFtChange}\n            onBlur={handleSqFtBlur}\n            min=\"100\"\n            max=\"100000\"\n          />\n        </div>\n\n        <div className=\"horizontal-input-group\">\n          <label>Waste (%)</label>\n          <input \n            type=\"number\" \n            value={waste} \n            onChange={handleWasteChange}\n            onBlur={handleWasteBlur}\n            min=\"0\"\n            max=\"50\"\n            step=\"5\"\n          />\n        </div>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Pitch</label>\n        <select value={pitch} onChange={handlePitchChange}>\n          {Object.keys(pitchOptions).map(key => (\n            <option key={key} value={key}>{key}</option>\n          ))}\n        </select>\n        <div className=\"price-input-wrapper\">\n          <span>$</span>\n          <input \n            type=\"number\" \n            value={pitchPrice} \n            onChange={handlePitchPriceChange}\n            onBlur={handlePitchPriceBlur}\n            min=\"0\"\n            max=\"1000\"\n            step=\"1\"\n          />\n          <span>/Sq</span>\n        </div>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Warranty</label>\n        <select value={warranty} onChange={handleWarrantyChange}>\n          {Object.keys(warrantyOptions).map(key => (\n            <option key={key} value={key}>{key}</option>\n          ))}\n        </select>\n        <div className=\"price-input-wrapper\">\n          <span>$</span>\n          <input \n            type=\"number\" \n            value={warrantyPrice} \n            onChange={handleWarrantyPriceChange}\n            onBlur={handleWarrantyPriceBlur}\n            min=\"0\"\n            max=\"1000\"\n            step=\"1\"\n          />\n          <span>/Sq</span>\n        </div>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Home Type</label>\n        <select value={homeType} onChange={handleHomeTypeChange}>\n          {Object.entries(homeTypeOptions).map(([key, { label, price }]) => (\n            <option key={key} value={key}>\n              {key === 'single' \n                ? label \n                : `${label} +($${price})`}\n            </option>\n          ))}\n        </select>\n        <div className=\"price-input-wrapper\">\n          <span>$</span>\n          <input \n            type=\"number\" \n            value={homeTypePrice} \n            onChange={handleHomeTypePriceChange}\n            onBlur={handleHomeTypePriceBlur}\n            min=\"0\"\n            max=\"1000\"\n            step=\"1\"\n          />\n          <span>/Sq</span>\n        </div>\n      </div>\n\n      <div className=\"adders-section\">\n        <label>Adders</label>\n        <div className=\"adders-container\">\n          <select \n            value={selectedAdder}\n            onChange={handleAdderChange}\n            className=\"adder-select\"\n          >\n            <option value=\"none\">Select an Adder</option>\n            {Object.entries(adderOptions).map(([key, { label }]) => (\n              key !== 'none' && <option key={key} value={key}>{label}</option>\n            ))}\n            <option value=\"custom\">Custom Adder</option>\n          </select>\n          \n          {isCustomAdder && (\n            <div className=\"custom-adder-container\">\n              <input\n                type=\"text\"\n                placeholder=\"Adder Name\"\n                value={customAdderName}\n                onChange={handleCustomAdderName}\n                className=\"custom-adder-name\"\n              />\n              <div className=\"custom-adder-inputs\">\n                <div className=\"price-input-group\">\n                  <span>$</span>\n                  <input\n                    type=\"number\"\n                    value={customAdderPrice}\n                    onChange={handleCustomAdderPrice}\n                    placeholder=\"\"\n                    className=\"standard-price-input\"\n                  />\n                </div>\n                <select \n                  value={customUnit}\n                  onChange={handleUnitChange}\n                  className=\"standard-price-input\"\n                >\n                  <option value=\"\"></option>\n                  <option value=\"/Sq\">/Sq</option>\n                  <option value=\"/Each\">/Each</option>\n                  <option value=\"/Ft\">/Ft</option>\n                  <option value=\"Sq/Ft\">/Sq/Ft</option>\n                  <option value=\"/Sheet\">/Sheet</option>\n                </select>\n                <div className=\"qty-input-group\">\n                  <span>Qty:</span>\n                  <input\n                    type=\"number\"\n                    value={customQuantity}\n                    onChange={(e) => setCustomQuantity(e.target.value)}\n                    min=\"1\"\n                    max=\"1000\"\n                    className=\"standard-price-input\"\n                    placeholder=\"\"\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {Object.entries(selectedAdders).map(([adderKey, quantity]) => (\n        <div key={adderKey} className=\"input-group selected-adder\">\n          <label>{adderOptions[adderKey].label}</label>\n          <div className=\"adder-input-wrapper\">\n            <input \n              type=\"number\" \n              value={quantity} \n              onChange={(e) => handleAdderQuantityChange(adderKey, e.target.value)}\n              onBlur={() => handleAdderQuantityBlur(adderKey)}\n              min=\"0\"\n              max=\"1000\"\n              step=\"1\"\n            />\n            <span>{adderOptions[adderKey].unit}(s)</span>\n            <button className=\"remove-adder\" onClick={() => removeAdder(adderKey)}>×</button>\n          </div>\n        </div>\n      ))}\n\n      <div className=\"results-container\">\n        <div className=\"results\">\n          <p>Squares: {squares}</p>\n          <p>Total Price: ${totalPrice.toFixed(2)}</p>\n        </div>\n        <button className=\"clear-button clear-button-red\" onClick={clearCalculator}>\n          CLEAR\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default RoofCalculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}