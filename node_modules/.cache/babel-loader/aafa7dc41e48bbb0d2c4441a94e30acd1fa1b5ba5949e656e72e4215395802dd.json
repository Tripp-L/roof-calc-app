{"ast":null,"code":"var _jsxFileName = \"/home/trippl/roof-calc-app/src/RoofCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './RoofCalculator.css'; // Make sure to create this CSS file\nimport { debounce } from 'lodash'; // Make sure to install lodash\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoofCalculator = () => {\n  _s();\n  const [pricePerSq, setPricePerSq] = useState(''); // Initialize to empty string\n  const [sqFt, setSqFt] = useState(''); // Keep this as empty string\n  const [waste, setWaste] = useState(''); // Initialize to empty string\n  const [pitch, setPitch] = useState('0-6');\n  const [warranty, setWarranty] = useState('Golden Pledge');\n  const [warrantyPrice, setWarrantyPrice] = useState('15');\n  const [homeType, setHomeType] = useState('single');\n  const [homeTypePrice, setHomeTypePrice] = useState('0');\n  const [twoStoryPrice, setTwoStoryPrice] = useState('5');\n  const [threeStoryPrice, setThreeStoryPrice] = useState('35');\n  const [adder, setAdder] = useState('none');\n  const [adderQuantity, setAdderQuantity] = useState('0');\n  const [squares, setSquares] = useState(0); // Initialize squares to 0\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [pitchPrice, setPitchPrice] = useState('0');\n\n  // Define default values\n  const defaultValues = {\n    sqFt: '',\n    waste: '10',\n    pricePerSq: '',\n    pitch: '0-6',\n    pitchPrice: '0',\n    homeType: 'single',\n    homeTypePrice: '0',\n    warranty: 'Golden Pledge',\n    warrantyPrice: '15',\n    adder: 'none',\n    adderQuantity: '0'\n  };\n\n  // Function to reset all fields to default values\n  const handleClear = () => {\n    setSqFt(defaultValues.sqFt);\n    setWaste(defaultValues.waste);\n    setPricePerSq(defaultValues.pricePerSq);\n    setPitch(defaultValues.pitch);\n    setPitchPrice(defaultValues.pitchPrice);\n    setHomeType(defaultValues.homeType);\n    setHomeTypePrice(defaultValues.homeTypePrice);\n    setWarranty(defaultValues.warranty);\n    setWarrantyPrice(defaultValues.warrantyPrice);\n    setAdder(defaultValues.adder);\n    setAdderQuantity(defaultValues.adderQuantity);\n\n    // Reset calculated values\n    setSquares(0);\n    setTotalPrice(0);\n  };\n  const pitchOptions = {\n    '0-6': '0',\n    '7-9': '35',\n    '10-12': '55',\n    '13+': '90'\n  };\n  const homeTypePrices = {\n    'Single-Story Home': 0,\n    '2-Story Home (+$/sq)': 5,\n    '3-Story Home (+$/sq)': 35\n  };\n  const warrantyOptions = {\n    'Golden Pledge': '15',\n    'Silver Pledge': '11',\n    'Systems': '8'\n  };\n  const homeTypeOptions = {\n    'single': {\n      label: 'Single-Story',\n      price: '0'\n    },\n    'two-story': {\n      label: '2-Story',\n      price: '10'\n    },\n    'three-story': {\n      label: '3-Story',\n      price: '35'\n    }\n  };\n  const adderOptions = {\n    'none': {\n      label: 'Select an Adder',\n      price: '0'\n    },\n    'ultimate_pipe_boot': {\n      label: 'Ultimate Pipe Boot (Neoprene)',\n      price: '100',\n      unit: 'Boot'\n    },\n    'soffit': {\n      label: 'Soffit (under 12\")',\n      price: '18',\n      unit: 'Ft'\n    },\n    'gutters_1story': {\n      label: 'Gutters (5\"-6\" 1-Story)',\n      price: '12',\n      unit: 'Ft'\n    },\n    'gutters_2story': {\n      label: 'Gutters (5\"-6\" 2-story)',\n      price: '15',\n      unit: 'Ft'\n    },\n    'osb': {\n      label: 'OSB (Plywood Layer)',\n      price: '100',\n      unit: 'Sheet'\n    }\n  };\n  const calculateTotal = () => {\n    let total = 0;\n\n    // Base calculation\n    const baseSquares = Math.round(parseFloat(sqFt) / 100) || 0;\n    const adjustedSquares = Math.round(baseSquares * (1 + (parseFloat(waste) || 0) / 100));\n    total += adjustedSquares * (parseFloat(pricePerSq) || 0);\n\n    // Add pitch price\n    total += adjustedSquares * (parseFloat(pitchPrice) || 0);\n\n    // Add home type price\n    total += adjustedSquares * (parseFloat(homeTypePrice) || 0);\n\n    // Add warranty price\n    total += adjustedSquares * (parseFloat(warrantyPrice) || 0);\n\n    // Add adder price\n    if (adder !== 'none') {\n      const adderPrice = parseFloat(adderOptions[adder].price);\n      const quantity = parseInt(adderQuantity) || 0;\n      total += adderPrice * quantity;\n    }\n    setTotalPrice(Math.round(total * 100) / 100); // Round to 2 decimal places\n    setSquares(adjustedSquares);\n  };\n\n  // Call calculateTotal whenever any input changes\n  useEffect(() => {\n    calculateTotal();\n  }, [sqFt, waste, pricePerSq, pitchPrice, homeTypePrice, warrantyPrice, adder, adderQuantity]);\n\n  // Debounced calculation function\n  const debouncedCalculate = debounce(calculateTotal, 300);\n\n  // Input validation example\n  const handleNumericInput = (e, setter, min = 0, max = Infinity) => {\n    const value = e.target.value;\n    if (value === '' || parseFloat(value) >= min && parseFloat(value) <= max) {\n      setter(value);\n      debouncedCalculate();\n    }\n  };\n  useEffect(() => {\n    calculateTotal();\n  }, [sqFt, waste, pricePerSq]);\n  const handlePricePerSqChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPricePerSq(value);\n      calculateTotal();\n    }\n  };\n  const handlePricePerSqBlur = () => {\n    if (pricePerSq === '') return;\n    let value = parseInt(pricePerSq);\n    if (isNaN(value) || value < 50) {\n      setPricePerSq('50');\n    } else if (value > 1000) {\n      setPricePerSq('1000');\n    } else {\n      setPricePerSq(value.toString());\n    }\n    calculateTotal();\n  };\n  const handleSqFtChange = useCallback(e => {\n    handleNumericInput(e, setSqFt, 100, 100000);\n  }, []);\n  const handleSqFtBlur = () => {\n    if (sqFt === '') return;\n    let value = parseInt(sqFt);\n    if (isNaN(value) || value < 100) {\n      setSqFt('100');\n    } else if (value > 100000) {\n      setSqFt('100000');\n    } else {\n      setSqFt(value.toString());\n    }\n    calculateTotal();\n  };\n  const handleWasteChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWaste(value);\n      calculateTotal();\n    }\n  };\n  const handleWasteBlur = () => {\n    if (waste === '') return;\n    let value = parseInt(waste);\n    if (isNaN(value) || value < 0) {\n      setWaste('0');\n    } else if (value > 50) {\n      setWaste('50');\n    } else {\n      value = Math.round(value / 5) * 5;\n      setWaste(value.toString());\n    }\n    calculateTotal();\n  };\n  const handlePitchChange = e => {\n    const selectedPitch = e.target.value;\n    setPitch(selectedPitch);\n    setPitchPrice(pitchOptions[selectedPitch]);\n    calculateTotal();\n  };\n  const handlePitchPriceChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPitchPrice(value);\n      calculateTotal();\n    }\n  };\n  const handlePitchPriceBlur = () => {\n    let value = parseInt(pitchPrice);\n    if (isNaN(value) || value < 0) {\n      setPitchPrice('0');\n    } else if (value > 1000) {\n      setPitchPrice('1000');\n    } else {\n      setPitchPrice(value.toString());\n    }\n    calculateTotal();\n  };\n  const handleWarrantyChange = e => {\n    const selectedWarranty = e.target.value;\n    setWarranty(selectedWarranty);\n    setWarrantyPrice(warrantyOptions[selectedWarranty]);\n    calculateTotal();\n  };\n  const handleWarrantyPriceChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWarrantyPrice(value);\n      calculateTotal();\n    }\n  };\n  const handleWarrantyPriceBlur = () => {\n    let value = parseInt(warrantyPrice);\n    if (isNaN(value) || value < 0) {\n      setWarrantyPrice('0');\n    } else if (value > 1000) {\n      setWarrantyPrice('1000');\n    } else {\n      setWarrantyPrice(value.toString());\n    }\n    calculateTotal();\n  };\n  const handleHomeTypeChange = e => {\n    const selectedType = e.target.value;\n    setHomeType(selectedType);\n    setHomeTypePrice(homeTypeOptions[selectedType].price);\n    calculateTotal();\n  };\n  const handleHomeTypePriceChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setHomeTypePrice(value);\n      calculateTotal();\n    }\n  };\n  const handleHomeTypePriceBlur = () => {\n    let value = parseInt(homeTypePrice);\n    if (isNaN(value) || value < 0) {\n      setHomeTypePrice('0');\n    } else if (value > 1000) {\n      setHomeTypePrice('1000');\n    } else {\n      setHomeTypePrice(value.toString());\n    }\n    calculateTotal();\n  };\n  const handleAdderChange = e => {\n    const selectedAdder = e.target.value;\n    setAdder(selectedAdder);\n    setAdderQuantity(selectedAdder === 'none' ? '0' : '1');\n    calculateTotal();\n  };\n  const handleAdderQuantityChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value) && parseInt(value) >= 0) {\n      setAdderQuantity(value);\n      calculateTotal();\n    }\n  };\n  const handleAdderQuantityBlur = () => {\n    let value = parseInt(adderQuantity);\n    if (isNaN(value) || value < 0) {\n      setAdderQuantity('0');\n    } else if (value > 1000) {\n      setAdderQuantity('1000');\n    } else {\n      setAdderQuantity(value.toString());\n    }\n    calculateTotal();\n  };\n  const MemoizedInputGroup = /*#__PURE__*/React.memo(({\n    label,\n    value,\n    onChange,\n    ...props\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: value,\n      onChange: onChange,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this));\n  const clearCalculator = () => {\n    setSqFt('');\n    setWaste('10');\n    setPricePerSq('');\n    setPitch('0-6');\n    setPitchPrice('0');\n    setHomeType('single');\n    setHomeTypePrice('0');\n    setWarranty('Golden Pledge');\n    setWarrantyPrice('15');\n    setAdder('none');\n    setAdderQuantity('0');\n    setSquares(0);\n    setTotalPrice(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Roof Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price/Sq ($)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: pricePerSq,\n        onChange: handlePricePerSqChange,\n        onBlur: handlePricePerSqBlur,\n        min: \"50\",\n        max: \"1000\",\n        step: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MemoizedInputGroup, {\n      label: \"Sq/ft\",\n      value: sqFt,\n      onChange: handleSqFtChange,\n      type: \"number\",\n      min: \"100\",\n      max: \"100000\",\n      step: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Waste (%)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: waste,\n        onChange: handleWasteChange,\n        onBlur: handleWasteBlur,\n        min: \"0\",\n        max: \"50\",\n        step: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pitch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pitch,\n        onChange: handlePitchChange,\n        children: Object.keys(pitchOptions).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pitch-price-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dollar-sign\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: pitchPrice,\n          onChange: handlePitchPriceChange,\n          onBlur: handlePitchPriceBlur,\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"/Sq\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Warranty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: warranty,\n        onChange: handleWarrantyChange,\n        children: Object.keys(warrantyOptions).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"warranty-price-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dollar-sign\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: warrantyPrice,\n          onChange: handleWarrantyPriceChange,\n          onBlur: handleWarrantyPriceBlur,\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"/Sq\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Home Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: homeType,\n        onChange: handleHomeTypeChange,\n        children: Object.entries(homeTypeOptions).map(([key, {\n          label,\n          price\n        }]) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key === 'single' ? label : `${label} +($${price})`\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dollar-sign\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: homeTypePrice,\n          onChange: handleHomeTypePriceChange,\n          onBlur: handleHomeTypePriceBlur,\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"/Sq\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Adders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: adder,\n        onChange: handleAdderChange,\n        children: Object.entries(adderOptions).map(([key, {\n          label,\n          price,\n          unit\n        }]) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key === 'none' ? label : `${label} ($${price}/${unit})`\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), adder !== 'none' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: adderQuantity,\n          onChange: handleAdderQuantityChange,\n          onBlur: handleAdderQuantityBlur,\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [adderOptions[adder].unit, \"(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClear,\n        className: \"clear-button\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Squares: \", squares]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Price: $\", totalPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-button\",\n        onClick: clearCalculator,\n        title: \"Clear calculator\",\n        children: \"\\u27F2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n};\n_s(RoofCalculator, \"3Aqjhpf2YWVQc7LYr1kysk1P660=\");\n_c = RoofCalculator;\nexport default RoofCalculator;\nvar _c;\n$RefreshReg$(_c, \"RoofCalculator\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","debounce","jsxDEV","_jsxDEV","RoofCalculator","_s","pricePerSq","setPricePerSq","sqFt","setSqFt","waste","setWaste","pitch","setPitch","warranty","setWarranty","warrantyPrice","setWarrantyPrice","homeType","setHomeType","homeTypePrice","setHomeTypePrice","twoStoryPrice","setTwoStoryPrice","threeStoryPrice","setThreeStoryPrice","adder","setAdder","adderQuantity","setAdderQuantity","squares","setSquares","totalPrice","setTotalPrice","pitchPrice","setPitchPrice","defaultValues","handleClear","pitchOptions","homeTypePrices","warrantyOptions","homeTypeOptions","label","price","adderOptions","unit","calculateTotal","total","baseSquares","Math","round","parseFloat","adjustedSquares","adderPrice","quantity","parseInt","debouncedCalculate","handleNumericInput","e","setter","min","max","Infinity","value","target","handlePricePerSqChange","isNaN","handlePricePerSqBlur","toString","handleSqFtChange","handleSqFtBlur","handleWasteChange","handleWasteBlur","handlePitchChange","selectedPitch","handlePitchPriceChange","handlePitchPriceBlur","handleWarrantyChange","selectedWarranty","handleWarrantyPriceChange","handleWarrantyPriceBlur","handleHomeTypeChange","selectedType","handleHomeTypePriceChange","handleHomeTypePriceBlur","handleAdderChange","selectedAdder","handleAdderQuantityChange","handleAdderQuantityBlur","MemoizedInputGroup","memo","onChange","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","clearCalculator","type","onBlur","step","Object","keys","map","key","entries","onClick","toFixed","title","_c","$RefreshReg$"],"sources":["/home/trippl/roof-calc-app/src/RoofCalculator.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './RoofCalculator.css'; // Make sure to create this CSS file\nimport { debounce } from 'lodash'; // Make sure to install lodash\n\nconst RoofCalculator = () => {\n  const [pricePerSq, setPricePerSq] = useState('');  // Initialize to empty string\n  const [sqFt, setSqFt] = useState('');  // Keep this as empty string\n  const [waste, setWaste] = useState('');  // Initialize to empty string\n  const [pitch, setPitch] = useState('0-6');\n  const [warranty, setWarranty] = useState('Golden Pledge');\n  const [warrantyPrice, setWarrantyPrice] = useState('15');\n  const [homeType, setHomeType] = useState('single');\n  const [homeTypePrice, setHomeTypePrice] = useState('0');\n  const [twoStoryPrice, setTwoStoryPrice] = useState('5');\n  const [threeStoryPrice, setThreeStoryPrice] = useState('35');\n  const [adder, setAdder] = useState('none');\n  const [adderQuantity, setAdderQuantity] = useState('0');\n  const [squares, setSquares] = useState(0);  // Initialize squares to 0\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [pitchPrice, setPitchPrice] = useState('0');\n\n  // Define default values\n  const defaultValues = {\n    sqFt: '',\n    waste: '10',\n    pricePerSq: '',\n    pitch: '0-6',\n    pitchPrice: '0',\n    homeType: 'single',\n    homeTypePrice: '0',\n    warranty: 'Golden Pledge',\n    warrantyPrice: '15',\n    adder: 'none',\n    adderQuantity: '0'\n  };\n\n  // Function to reset all fields to default values\n  const handleClear = () => {\n    setSqFt(defaultValues.sqFt);\n    setWaste(defaultValues.waste);\n    setPricePerSq(defaultValues.pricePerSq);\n    setPitch(defaultValues.pitch);\n    setPitchPrice(defaultValues.pitchPrice);\n    setHomeType(defaultValues.homeType);\n    setHomeTypePrice(defaultValues.homeTypePrice);\n    setWarranty(defaultValues.warranty);\n    setWarrantyPrice(defaultValues.warrantyPrice);\n    setAdder(defaultValues.adder);\n    setAdderQuantity(defaultValues.adderQuantity);\n\n    // Reset calculated values\n    setSquares(0);\n    setTotalPrice(0);\n  };\n\n  const pitchOptions = {\n    '0-6': '0',\n    '7-9': '35',\n    '10-12': '55',\n    '13+': '90'\n  };\n\n  const homeTypePrices = {\n    'Single-Story Home': 0,\n    '2-Story Home (+$/sq)': 5,\n    '3-Story Home (+$/sq)': 35\n  };\n\n  const warrantyOptions = {\n    'Golden Pledge': '15',\n    'Silver Pledge': '11',\n    'Systems': '8'\n  };\n\n  const homeTypeOptions = {\n    'single': { label: 'Single-Story', price: '0' },\n    'two-story': { label: '2-Story', price: '10' },\n    'three-story': { label: '3-Story', price: '35' }\n  };\n\n  const adderOptions = {\n    'none': { label: 'Select an Adder', price: '0' },\n    'ultimate_pipe_boot': { label: 'Ultimate Pipe Boot (Neoprene)', price: '100', unit: 'Boot' },\n    'soffit': { label: 'Soffit (under 12\")', price: '18', unit: 'Ft' },\n    'gutters_1story': { label: 'Gutters (5\"-6\" 1-Story)', price: '12', unit: 'Ft' },\n    'gutters_2story': { label: 'Gutters (5\"-6\" 2-story)', price: '15', unit: 'Ft' },\n    'osb': { label: 'OSB (Plywood Layer)', price: '100', unit: 'Sheet' }\n  };\n\n  const calculateTotal = () => {\n    let total = 0;\n    \n    // Base calculation\n    const baseSquares = Math.round(parseFloat(sqFt) / 100) || 0;\n    const adjustedSquares = Math.round(baseSquares * (1 + (parseFloat(waste) || 0) / 100));\n    total += adjustedSquares * (parseFloat(pricePerSq) || 0);\n\n    // Add pitch price\n    total += adjustedSquares * (parseFloat(pitchPrice) || 0);\n\n    // Add home type price\n    total += adjustedSquares * (parseFloat(homeTypePrice) || 0);\n\n    // Add warranty price\n    total += adjustedSquares * (parseFloat(warrantyPrice) || 0);\n\n    // Add adder price\n    if (adder !== 'none') {\n      const adderPrice = parseFloat(adderOptions[adder].price);\n      const quantity = parseInt(adderQuantity) || 0;\n      total += adderPrice * quantity;\n    }\n\n    setTotalPrice(Math.round(total * 100) / 100); // Round to 2 decimal places\n    setSquares(adjustedSquares);\n  };\n\n  // Call calculateTotal whenever any input changes\n  useEffect(() => {\n    calculateTotal();\n  }, [sqFt, waste, pricePerSq, pitchPrice, homeTypePrice, warrantyPrice, adder, adderQuantity]);\n\n  // Debounced calculation function\n  const debouncedCalculate = debounce(calculateTotal, 300);\n\n  // Input validation example\n  const handleNumericInput = (e, setter, min = 0, max = Infinity) => {\n    const value = e.target.value;\n    if (value === '' || (parseFloat(value) >= min && parseFloat(value) <= max)) {\n      setter(value);\n      debouncedCalculate();\n    }\n  };\n\n  useEffect(() => {\n    calculateTotal();\n  }, [sqFt, waste, pricePerSq]);\n\n  const handlePricePerSqChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPricePerSq(value);\n      calculateTotal();\n    }\n  };\n\n  const handlePricePerSqBlur = () => {\n    if (pricePerSq === '') return;\n    let value = parseInt(pricePerSq);\n    if (isNaN(value) || value < 50) {\n      setPricePerSq('50');\n    } else if (value > 1000) {\n      setPricePerSq('1000');\n    } else {\n      setPricePerSq(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const handleSqFtChange = useCallback((e) => {\n    handleNumericInput(e, setSqFt, 100, 100000);\n  }, []);\n\n  const handleSqFtBlur = () => {\n    if (sqFt === '') return;\n    let value = parseInt(sqFt);\n    if (isNaN(value) || value < 100) {\n      setSqFt('100');\n    } else if (value > 100000) {\n      setSqFt('100000');\n    } else {\n      setSqFt(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const handleWasteChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWaste(value);\n      calculateTotal();\n    }\n  };\n\n  const handleWasteBlur = () => {\n    if (waste === '') return;\n    let value = parseInt(waste);\n    if (isNaN(value) || value < 0) {\n      setWaste('0');\n    } else if (value > 50) {\n      setWaste('50');\n    } else {\n      value = Math.round(value / 5) * 5;\n      setWaste(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const handlePitchChange = (e) => {\n    const selectedPitch = e.target.value;\n    setPitch(selectedPitch);\n    setPitchPrice(pitchOptions[selectedPitch]);\n    calculateTotal();\n  };\n\n  const handlePitchPriceChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPitchPrice(value);\n      calculateTotal();\n    }\n  };\n\n  const handlePitchPriceBlur = () => {\n    let value = parseInt(pitchPrice);\n    if (isNaN(value) || value < 0) {\n      setPitchPrice('0');\n    } else if (value > 1000) {\n      setPitchPrice('1000');\n    } else {\n      setPitchPrice(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const handleWarrantyChange = (e) => {\n    const selectedWarranty = e.target.value;\n    setWarranty(selectedWarranty);\n    setWarrantyPrice(warrantyOptions[selectedWarranty]);\n    calculateTotal();\n  };\n\n  const handleWarrantyPriceChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWarrantyPrice(value);\n      calculateTotal();\n    }\n  };\n\n  const handleWarrantyPriceBlur = () => {\n    let value = parseInt(warrantyPrice);\n    if (isNaN(value) || value < 0) {\n      setWarrantyPrice('0');\n    } else if (value > 1000) {\n      setWarrantyPrice('1000');\n    } else {\n      setWarrantyPrice(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const handleHomeTypeChange = (e) => {\n    const selectedType = e.target.value;\n    setHomeType(selectedType);\n    setHomeTypePrice(homeTypeOptions[selectedType].price);\n    calculateTotal();\n  };\n\n  const handleHomeTypePriceChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setHomeTypePrice(value);\n      calculateTotal();\n    }\n  };\n\n  const handleHomeTypePriceBlur = () => {\n    let value = parseInt(homeTypePrice);\n    if (isNaN(value) || value < 0) {\n      setHomeTypePrice('0');\n    } else if (value > 1000) {\n      setHomeTypePrice('1000');\n    } else {\n      setHomeTypePrice(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const handleAdderChange = (e) => {\n    const selectedAdder = e.target.value;\n    setAdder(selectedAdder);\n    setAdderQuantity(selectedAdder === 'none' ? '0' : '1');\n    calculateTotal();\n  };\n\n  const handleAdderQuantityChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || (!isNaN(value) && parseInt(value) >= 0)) {\n      setAdderQuantity(value);\n      calculateTotal();\n    }\n  };\n\n  const handleAdderQuantityBlur = () => {\n    let value = parseInt(adderQuantity);\n    if (isNaN(value) || value < 0) {\n      setAdderQuantity('0');\n    } else if (value > 1000) {\n      setAdderQuantity('1000');\n    } else {\n      setAdderQuantity(value.toString());\n    }\n    calculateTotal();\n  };\n\n  const MemoizedInputGroup = React.memo(({ label, value, onChange, ...props }) => (\n    <div className=\"input-group\">\n      <label>{label}</label>\n      <input value={value} onChange={onChange} {...props} />\n    </div>\n  ));\n\n  const clearCalculator = () => {\n    setSqFt('');\n    setWaste('10');\n    setPricePerSq('');\n    setPitch('0-6');\n    setPitchPrice('0');\n    setHomeType('single');\n    setHomeTypePrice('0');\n    setWarranty('Golden Pledge');\n    setWarrantyPrice('15');\n    setAdder('none');\n    setAdderQuantity('0');\n    setSquares(0);\n    setTotalPrice(0);\n  };\n\n  return (\n    <div className=\"calculator\">\n      <h1>Roof Calculator</h1>\n      \n      <div className=\"input-group\">\n        <label>Price/Sq ($)</label>\n        <input \n          type=\"number\" \n          value={pricePerSq} \n          onChange={handlePricePerSqChange}\n          onBlur={handlePricePerSqBlur}\n          min=\"50\"\n          max=\"1000\"\n          step=\"1\"\n        />\n      </div>\n\n      <MemoizedInputGroup \n        label=\"Sq/ft\" \n        value={sqFt} \n        onChange={handleSqFtChange}\n        type=\"number\"\n        min=\"100\"\n        max=\"100000\"\n        step=\"1\"\n      />\n\n      <div className=\"input-group\">\n        <label>Waste (%)</label>\n        <input \n          type=\"number\" \n          value={waste} \n          onChange={handleWasteChange}\n          onBlur={handleWasteBlur}\n          min=\"0\"\n          max=\"50\"\n          step=\"5\"\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label>Pitch</label>\n        <select value={pitch} onChange={handlePitchChange}>\n          {Object.keys(pitchOptions).map(key => (\n            <option key={key} value={key}>{key}</option>\n          ))}\n        </select>\n        <div className=\"pitch-price-input\">\n          <span className=\"dollar-sign\">$</span>\n          <input \n            type=\"number\" \n            value={pitchPrice} \n            onChange={handlePitchPriceChange}\n            onBlur={handlePitchPriceBlur}\n            min=\"0\"\n            max=\"1000\"\n            step=\"1\"\n          />\n          <span>/Sq</span>\n        </div>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Warranty</label>\n        <select value={warranty} onChange={handleWarrantyChange}>\n          {Object.keys(warrantyOptions).map(key => (\n            <option key={key} value={key}>{key}</option>\n          ))}\n        </select>\n        <div className=\"warranty-price-input\">\n          <span className=\"dollar-sign\">$</span>\n          <input \n            type=\"number\" \n            value={warrantyPrice} \n            onChange={handleWarrantyPriceChange}\n            onBlur={handleWarrantyPriceBlur}\n            min=\"0\"\n            max=\"1000\"\n            step=\"1\"\n          />\n          <span>/Sq</span>\n        </div>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Home Type</label>\n        <select value={homeType} onChange={handleHomeTypeChange}>\n          {Object.entries(homeTypeOptions).map(([key, { label, price }]) => (\n            <option key={key} value={key}>\n              {key === 'single' \n                ? label \n                : `${label} +($${price})`}\n            </option>\n          ))}\n        </select>\n        <div className=\"price-input-wrapper\">\n          <span className=\"dollar-sign\">$</span>\n          <input \n            type=\"number\" \n            value={homeTypePrice} \n            onChange={handleHomeTypePriceChange}\n            onBlur={handleHomeTypePriceBlur}\n            min=\"0\"\n            max=\"1000\"\n            step=\"1\"\n          />\n          <span>/Sq</span>\n        </div>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Adders</label>\n        <select value={adder} onChange={handleAdderChange}>\n          {Object.entries(adderOptions).map(([key, { label, price, unit }]) => (\n            <option key={key} value={key}>\n              {key === 'none' ? label : `${label} ($${price}/${unit})`}\n            </option>\n          ))}\n        </select>\n        {adder !== 'none' && (\n          <div className=\"price-input-wrapper\">\n            <input \n              type=\"number\" \n              value={adderQuantity} \n              onChange={handleAdderQuantityChange}\n              onBlur={handleAdderQuantityBlur}\n              min=\"0\"\n              max=\"1000\"\n              step=\"1\"\n            />\n            <span>{adderOptions[adder].unit}(s)</span>\n          </div>\n        )}\n      </div>\n\n      {/* Add Clear button */}\n      <div className=\"button-container\">\n        <button onClick={handleClear} className=\"clear-button\">Clear</button>\n      </div>\n\n      <div className=\"results-container\">\n        <div className=\"results\">\n          <p>Squares: {squares}</p>\n          <p>Total Price: ${totalPrice.toFixed(2)}</p>\n        </div>\n        <button className=\"clear-button\" onClick={clearCalculator} title=\"Clear calculator\">\n          ⟲\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default RoofCalculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}