{"ast":null,"code":"var _jsxFileName = \"/home/trippl/roof-calc-app/src/RoofCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './RoofCalculator.css'; // Make sure to create this CSS file\nimport { debounce } from 'lodash'; // Make sure to install lodash\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoofCalculator = () => {\n  _s();\n  const [pricePerSq, setPricePerSq] = useState(''); // Initialize to empty string\n  const [sqFt, setSqFt] = useState(''); // Keep this as empty string\n  const [waste, setWaste] = useState(''); // Initialize to empty string\n  const [pitch, setPitch] = useState('0-6');\n  const [warranty, setWarranty] = useState('Golden Pledge');\n  const [warrantyPrice, setWarrantyPrice] = useState('15');\n  const [homeType, setHomeType] = useState('single');\n  const [homeTypePrice, setHomeTypePrice] = useState('0');\n  const [twoStoryPrice, setTwoStoryPrice] = useState('5');\n  const [threeStoryPrice, setThreeStoryPrice] = useState('35');\n  const [adder, setAdder] = useState('none');\n  const [adderQuantity, setAdderQuantity] = useState('0');\n  const [squares, setSquares] = useState(0); // Initialize squares to 0\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [pitchPrice, setPitchPrice] = useState('0');\n  const pitchOptions = {\n    '0-6': '0',\n    '7-9': '35',\n    '10-12': '55',\n    '13+': '90'\n  };\n  const homeTypePrices = {\n    'Single-Story Home': 0,\n    '2-Story Home (+$/sq)': 5,\n    '3-Story Home (+$/sq)': 35\n  };\n  const warrantyOptions = {\n    'Golden Pledge': '15',\n    'Silver Pledge': '11',\n    'Systems': '8'\n  };\n  const homeTypeOptions = {\n    'single': {\n      label: 'Single-Story',\n      price: '0'\n    },\n    'two-story': {\n      label: '2-Story',\n      price: '10'\n    },\n    'three-story': {\n      label: '3-Story',\n      price: '35'\n    }\n  };\n  const adderOptions = {\n    'none': {\n      label: 'Select an Adder',\n      price: '0'\n    },\n    'ultimate_pipe_boot': {\n      label: 'Ultimate Pipe Boot (Neoprene)',\n      price: '100',\n      unit: 'Boot'\n    },\n    'soffit': {\n      label: 'Soffit (under 12\")',\n      price: '18',\n      unit: 'Ft'\n    },\n    'gutters_1story': {\n      label: 'Gutters (5\"-6\" 1-Story)',\n      price: '12',\n      unit: 'Ft'\n    },\n    'gutters_2story': {\n      label: 'Gutters (5\"-6\" 2-story)',\n      price: '15',\n      unit: 'Ft'\n    },\n    'osb': {\n      label: 'OSB (Plywood Layer)',\n      price: '100',\n      unit: 'Sheet'\n    }\n  };\n  const calculateSquaresAndTotal = () => {\n    var _adderOptions$adder;\n    // Convert string inputs to numbers and use precise calculations\n    const sqFtNum = parseFloat(sqFt) || 0;\n    const wasteNum = parseFloat(waste) || 0;\n    const pricePerSqNum = parseFloat(pricePerSq) || 0;\n    const pitchPriceNum = parseFloat(pitchPrice) || 0;\n    const homeTypePriceNum = parseFloat(homeTypePrice) || 0;\n    const warrantyPriceNum = parseFloat(warrantyPrice) || 0;\n    const adderPriceNum = parseFloat(((_adderOptions$adder = adderOptions[adder]) === null || _adderOptions$adder === void 0 ? void 0 : _adderOptions$adder.price) || 0);\n    const adderQuantityNum = parseFloat(adderQuantity) || 0;\n\n    // Calculate squares with rounding\n    const baseSquares = Math.round(sqFtNum / 100);\n    const adjustedSquares = Math.round(baseSquares * (1 + wasteNum / 100));\n    setSquares(adjustedSquares);\n\n    // Calculate total price\n    let calculatedTotal = adjustedSquares * (pricePerSqNum + pitchPriceNum + homeTypePriceNum + warrantyPriceNum);\n\n    // Add adder cost\n    if (adder !== 'none') {\n      calculatedTotal += adderPriceNum * adderQuantityNum;\n    }\n\n    // Round to two decimal places for currency\n    setTotalPrice(Math.round(calculatedTotal * 100) / 100);\n  };\n\n  // Debounced calculation function\n  const debouncedCalculate = debounce(calculateSquaresAndTotal, 300);\n\n  // Input validation example\n  const handleNumericInput = (e, setter, min = 0, max = Infinity) => {\n    const value = e.target.value;\n    if (value === '' || parseFloat(value) >= min && parseFloat(value) <= max) {\n      setter(value);\n      debouncedCalculate();\n    }\n  };\n  useEffect(() => {\n    calculateSquaresAndTotal();\n  }, [sqFt, waste, pricePerSq]);\n  const handlePricePerSqChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPricePerSq(value);\n      calculateSquaresAndTotal();\n    }\n  };\n  const handlePricePerSqBlur = () => {\n    if (pricePerSq === '') return;\n    let value = parseInt(pricePerSq);\n    if (isNaN(value) || value < 50) {\n      setPricePerSq('50');\n    } else if (value > 1000) {\n      setPricePerSq('1000');\n    } else {\n      setPricePerSq(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n  const handleSqFtChange = useCallback(e => {\n    handleNumericInput(e, setSqFt, 100, 100000);\n  }, []);\n  const handleSqFtBlur = () => {\n    if (sqFt === '') return;\n    let value = parseInt(sqFt);\n    if (isNaN(value) || value < 100) {\n      setSqFt('100');\n    } else if (value > 100000) {\n      setSqFt('100000');\n    } else {\n      setSqFt(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n  const handleWasteChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWaste(value);\n      calculateSquaresAndTotal();\n    }\n  };\n  const handleWasteBlur = () => {\n    if (waste === '') return;\n    let value = parseInt(waste);\n    if (isNaN(value) || value < 0) {\n      setWaste('0');\n    } else if (value > 50) {\n      setWaste('50');\n    } else {\n      value = Math.round(value / 5) * 5;\n      setWaste(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n  const handlePitchChange = e => {\n    const selectedPitch = e.target.value;\n    setPitch(selectedPitch);\n    setPitchPrice(pitchOptions[selectedPitch]);\n    calculateSquaresAndTotal();\n  };\n  const handlePitchPriceChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPitchPrice(value);\n      calculateSquaresAndTotal();\n    }\n  };\n  const handlePitchPriceBlur = () => {\n    let value = parseInt(pitchPrice);\n    if (isNaN(value) || value < 0) {\n      setPitchPrice('0');\n    } else if (value > 1000) {\n      setPitchPrice('1000');\n    } else {\n      setPitchPrice(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n  const handleWarrantyChange = e => {\n    const selectedWarranty = e.target.value;\n    setWarranty(selectedWarranty);\n    setWarrantyPrice(warrantyOptions[selectedWarranty]);\n    calculateSquaresAndTotal();\n  };\n  const handleWarrantyPriceChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWarrantyPrice(value);\n      calculateSquaresAndTotal();\n    }\n  };\n  const handleWarrantyPriceBlur = () => {\n    let value = parseInt(warrantyPrice);\n    if (isNaN(value) || value < 0) {\n      setWarrantyPrice('0');\n    } else if (value > 1000) {\n      setWarrantyPrice('1000');\n    } else {\n      setWarrantyPrice(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n  const handleHomeTypeChange = e => {\n    const selectedType = e.target.value;\n    setHomeType(selectedType);\n    setHomeTypePrice(homeTypeOptions[selectedType].price);\n    calculateSquaresAndTotal();\n  };\n  const handleHomeTypePriceChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setHomeTypePrice(value);\n      calculateSquaresAndTotal();\n    }\n  };\n  const handleHomeTypePriceBlur = () => {\n    let value = parseInt(homeTypePrice);\n    if (isNaN(value) || value < 0) {\n      setHomeTypePrice('0');\n    } else if (value > 1000) {\n      setHomeTypePrice('1000');\n    } else {\n      setHomeTypePrice(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n  const handleAdderChange = e => {\n    const selectedAdder = e.target.value;\n    setAdder(selectedAdder);\n    setAdderQuantity(selectedAdder === 'none' ? '0' : '1');\n    calculateSquaresAndTotal();\n  };\n  const handleAdderQuantityChange = e => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setAdderQuantity(value);\n      calculateSquaresAndTotal();\n    }\n  };\n  const handleAdderQuantityBlur = () => {\n    let value = parseInt(adderQuantity);\n    if (isNaN(value) || value < 0) {\n      setAdderQuantity('0');\n    } else if (value > 1000) {\n      setAdderQuantity('1000');\n    } else {\n      setAdderQuantity(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Roof Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price/Sq ($)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: pricePerSq,\n        onChange: handlePricePerSqChange,\n        onBlur: handlePricePerSqBlur,\n        min: \"50\",\n        max: \"1000\",\n        step: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sq/ft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: sqFt,\n        onChange: e => handleNumericInput(e, setSqFt, 100, 100000),\n        onBlur: () => setSqFt(prev => prev === '' ? '0' : prev),\n        min: \"100\",\n        max: \"100000\",\n        step: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Waste (%)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: waste,\n        onChange: handleWasteChange,\n        onBlur: handleWasteBlur,\n        min: \"0\",\n        max: \"50\",\n        step: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pitch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: pitch,\n        onChange: handlePitchChange,\n        children: Object.keys(pitchOptions).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pitch-price-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dollar-sign\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: pitchPrice,\n          onChange: handlePitchPriceChange,\n          onBlur: handlePitchPriceBlur,\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"/Sq\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Warranty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: warranty,\n        onChange: handleWarrantyChange,\n        children: Object.keys(warrantyOptions).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"warranty-price-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dollar-sign\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: warrantyPrice,\n          onChange: handleWarrantyPriceChange,\n          onBlur: handleWarrantyPriceBlur,\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"/Sq\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Home Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: homeType,\n        onChange: handleHomeTypeChange,\n        children: Object.entries(homeTypeOptions).map(([key, {\n          label,\n          price\n        }]) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key === 'single' ? label : `${label} +($${price})`\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dollar-sign\",\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: homeTypePrice,\n          onChange: handleHomeTypePriceChange,\n          onBlur: handleHomeTypePriceBlur,\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"/Sq\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Adders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: adder,\n        onChange: handleAdderChange,\n        children: Object.entries(adderOptions).map(([key, {\n          label,\n          price,\n          unit\n        }]) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key === 'none' ? label : `${label} ($${price}/${unit})`\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), adder !== 'none' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"price-input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: adderQuantity,\n          onChange: handleAdderQuantityChange,\n          onBlur: handleAdderQuantityBlur,\n          min: \"0\",\n          max: \"1000\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [adderOptions[adder].unit, \"(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Squares: \", squares]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Total Price: $\", totalPrice.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n};\n_s(RoofCalculator, \"/PtVv+0zDLw0DfmnbpLSwbK4caE=\");\n_c = RoofCalculator;\nexport default RoofCalculator;\nvar _c;\n$RefreshReg$(_c, \"RoofCalculator\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","debounce","jsxDEV","_jsxDEV","RoofCalculator","_s","pricePerSq","setPricePerSq","sqFt","setSqFt","waste","setWaste","pitch","setPitch","warranty","setWarranty","warrantyPrice","setWarrantyPrice","homeType","setHomeType","homeTypePrice","setHomeTypePrice","twoStoryPrice","setTwoStoryPrice","threeStoryPrice","setThreeStoryPrice","adder","setAdder","adderQuantity","setAdderQuantity","squares","setSquares","totalPrice","setTotalPrice","pitchPrice","setPitchPrice","pitchOptions","homeTypePrices","warrantyOptions","homeTypeOptions","label","price","adderOptions","unit","calculateSquaresAndTotal","_adderOptions$adder","sqFtNum","parseFloat","wasteNum","pricePerSqNum","pitchPriceNum","homeTypePriceNum","warrantyPriceNum","adderPriceNum","adderQuantityNum","baseSquares","Math","round","adjustedSquares","calculatedTotal","debouncedCalculate","handleNumericInput","e","setter","min","max","Infinity","value","target","handlePricePerSqChange","isNaN","handlePricePerSqBlur","parseInt","toString","handleSqFtChange","handleSqFtBlur","handleWasteChange","handleWasteBlur","handlePitchChange","selectedPitch","handlePitchPriceChange","handlePitchPriceBlur","handleWarrantyChange","selectedWarranty","handleWarrantyPriceChange","handleWarrantyPriceBlur","handleHomeTypeChange","selectedType","handleHomeTypePriceChange","handleHomeTypePriceBlur","handleAdderChange","selectedAdder","handleAdderQuantityChange","handleAdderQuantityBlur","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onBlur","step","prev","Object","keys","map","key","entries","toFixed","_c","$RefreshReg$"],"sources":["/home/trippl/roof-calc-app/src/RoofCalculator.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './RoofCalculator.css'; // Make sure to create this CSS file\nimport { debounce } from 'lodash'; // Make sure to install lodash\n\nconst RoofCalculator = () => {\n  const [pricePerSq, setPricePerSq] = useState('');  // Initialize to empty string\n  const [sqFt, setSqFt] = useState('');  // Keep this as empty string\n  const [waste, setWaste] = useState('');  // Initialize to empty string\n  const [pitch, setPitch] = useState('0-6');\n  const [warranty, setWarranty] = useState('Golden Pledge');\n  const [warrantyPrice, setWarrantyPrice] = useState('15');\n  const [homeType, setHomeType] = useState('single');\n  const [homeTypePrice, setHomeTypePrice] = useState('0');\n  const [twoStoryPrice, setTwoStoryPrice] = useState('5');\n  const [threeStoryPrice, setThreeStoryPrice] = useState('35');\n  const [adder, setAdder] = useState('none');\n  const [adderQuantity, setAdderQuantity] = useState('0');\n  const [squares, setSquares] = useState(0);  // Initialize squares to 0\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [pitchPrice, setPitchPrice] = useState('0');\n\n  const pitchOptions = {\n    '0-6': '0',\n    '7-9': '35',\n    '10-12': '55',\n    '13+': '90'\n  };\n\n  const homeTypePrices = {\n    'Single-Story Home': 0,\n    '2-Story Home (+$/sq)': 5,\n    '3-Story Home (+$/sq)': 35\n  };\n\n  const warrantyOptions = {\n    'Golden Pledge': '15',\n    'Silver Pledge': '11',\n    'Systems': '8'\n  };\n\n  const homeTypeOptions = {\n    'single': { label: 'Single-Story', price: '0' },\n    'two-story': { label: '2-Story', price: '10' },\n    'three-story': { label: '3-Story', price: '35' }\n  };\n\n  const adderOptions = {\n    'none': { label: 'Select an Adder', price: '0' },\n    'ultimate_pipe_boot': { label: 'Ultimate Pipe Boot (Neoprene)', price: '100', unit: 'Boot' },\n    'soffit': { label: 'Soffit (under 12\")', price: '18', unit: 'Ft' },\n    'gutters_1story': { label: 'Gutters (5\"-6\" 1-Story)', price: '12', unit: 'Ft' },\n    'gutters_2story': { label: 'Gutters (5\"-6\" 2-story)', price: '15', unit: 'Ft' },\n    'osb': { label: 'OSB (Plywood Layer)', price: '100', unit: 'Sheet' }\n  };\n\n  const calculateSquaresAndTotal = () => {\n    // Convert string inputs to numbers and use precise calculations\n    const sqFtNum = parseFloat(sqFt) || 0;\n    const wasteNum = parseFloat(waste) || 0;\n    const pricePerSqNum = parseFloat(pricePerSq) || 0;\n    const pitchPriceNum = parseFloat(pitchPrice) || 0;\n    const homeTypePriceNum = parseFloat(homeTypePrice) || 0;\n    const warrantyPriceNum = parseFloat(warrantyPrice) || 0;\n    const adderPriceNum = parseFloat(adderOptions[adder]?.price || 0);\n    const adderQuantityNum = parseFloat(adderQuantity) || 0;\n\n    // Calculate squares with rounding\n    const baseSquares = Math.round(sqFtNum / 100);\n    const adjustedSquares = Math.round(baseSquares * (1 + wasteNum / 100));\n    setSquares(adjustedSquares);\n\n    // Calculate total price\n    let calculatedTotal = adjustedSquares * (pricePerSqNum + pitchPriceNum + homeTypePriceNum + warrantyPriceNum);\n    \n    // Add adder cost\n    if (adder !== 'none') {\n      calculatedTotal += adderPriceNum * adderQuantityNum;\n    }\n\n    // Round to two decimal places for currency\n    setTotalPrice(Math.round(calculatedTotal * 100) / 100);\n  };\n\n  // Debounced calculation function\n  const debouncedCalculate = debounce(calculateSquaresAndTotal, 300);\n\n  // Input validation example\n  const handleNumericInput = (e, setter, min = 0, max = Infinity) => {\n    const value = e.target.value;\n    if (value === '' || (parseFloat(value) >= min && parseFloat(value) <= max)) {\n      setter(value);\n      debouncedCalculate();\n    }\n  };\n\n  useEffect(() => {\n    calculateSquaresAndTotal();\n  }, [sqFt, waste, pricePerSq]);\n\n  const handlePricePerSqChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPricePerSq(value);\n      calculateSquaresAndTotal();\n    }\n  };\n\n  const handlePricePerSqBlur = () => {\n    if (pricePerSq === '') return;\n    let value = parseInt(pricePerSq);\n    if (isNaN(value) || value < 50) {\n      setPricePerSq('50');\n    } else if (value > 1000) {\n      setPricePerSq('1000');\n    } else {\n      setPricePerSq(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n\n  const handleSqFtChange = useCallback((e) => {\n    handleNumericInput(e, setSqFt, 100, 100000);\n  }, []);\n\n  const handleSqFtBlur = () => {\n    if (sqFt === '') return;\n    let value = parseInt(sqFt);\n    if (isNaN(value) || value < 100) {\n      setSqFt('100');\n    } else if (value > 100000) {\n      setSqFt('100000');\n    } else {\n      setSqFt(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n\n  const handleWasteChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWaste(value);\n      calculateSquaresAndTotal();\n    }\n  };\n\n  const handleWasteBlur = () => {\n    if (waste === '') return;\n    let value = parseInt(waste);\n    if (isNaN(value) || value < 0) {\n      setWaste('0');\n    } else if (value > 50) {\n      setWaste('50');\n    } else {\n      value = Math.round(value / 5) * 5;\n      setWaste(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n\n  const handlePitchChange = (e) => {\n    const selectedPitch = e.target.value;\n    setPitch(selectedPitch);\n    setPitchPrice(pitchOptions[selectedPitch]);\n    calculateSquaresAndTotal();\n  };\n\n  const handlePitchPriceChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setPitchPrice(value);\n      calculateSquaresAndTotal();\n    }\n  };\n\n  const handlePitchPriceBlur = () => {\n    let value = parseInt(pitchPrice);\n    if (isNaN(value) || value < 0) {\n      setPitchPrice('0');\n    } else if (value > 1000) {\n      setPitchPrice('1000');\n    } else {\n      setPitchPrice(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n\n  const handleWarrantyChange = (e) => {\n    const selectedWarranty = e.target.value;\n    setWarranty(selectedWarranty);\n    setWarrantyPrice(warrantyOptions[selectedWarranty]);\n    calculateSquaresAndTotal();\n  };\n\n  const handleWarrantyPriceChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setWarrantyPrice(value);\n      calculateSquaresAndTotal();\n    }\n  };\n\n  const handleWarrantyPriceBlur = () => {\n    let value = parseInt(warrantyPrice);\n    if (isNaN(value) || value < 0) {\n      setWarrantyPrice('0');\n    } else if (value > 1000) {\n      setWarrantyPrice('1000');\n    } else {\n      setWarrantyPrice(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n\n  const handleHomeTypeChange = (e) => {\n    const selectedType = e.target.value;\n    setHomeType(selectedType);\n    setHomeTypePrice(homeTypeOptions[selectedType].price);\n    calculateSquaresAndTotal();\n  };\n\n  const handleHomeTypePriceChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setHomeTypePrice(value);\n      calculateSquaresAndTotal();\n    }\n  };\n\n  const handleHomeTypePriceBlur = () => {\n    let value = parseInt(homeTypePrice);\n    if (isNaN(value) || value < 0) {\n      setHomeTypePrice('0');\n    } else if (value > 1000) {\n      setHomeTypePrice('1000');\n    } else {\n      setHomeTypePrice(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n\n  const handleAdderChange = (e) => {\n    const selectedAdder = e.target.value;\n    setAdder(selectedAdder);\n    setAdderQuantity(selectedAdder === 'none' ? '0' : '1');\n    calculateSquaresAndTotal();\n  };\n\n  const handleAdderQuantityChange = (e) => {\n    const value = e.target.value;\n    if (value === '' || !isNaN(value)) {\n      setAdderQuantity(value);\n      calculateSquaresAndTotal();\n    }\n  };\n\n  const handleAdderQuantityBlur = () => {\n    let value = parseInt(adderQuantity);\n    if (isNaN(value) || value < 0) {\n      setAdderQuantity('0');\n    } else if (value > 1000) {\n      setAdderQuantity('1000');\n    } else {\n      setAdderQuantity(value.toString());\n    }\n    calculateSquaresAndTotal();\n  };\n\n  return (\n    <div className=\"calculator\">\n      <h1>Roof Calculator</h1>\n      \n      <div className=\"input-group\">\n        <label>Price/Sq ($)</label>\n        <input \n          type=\"number\" \n          value={pricePerSq} \n          onChange={handlePricePerSqChange}\n          onBlur={handlePricePerSqBlur}\n          min=\"50\"\n          max=\"1000\"\n          step=\"1\"\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label>Sq/ft</label>\n        <input \n          type=\"number\" \n          value={sqFt} \n          onChange={(e) => handleNumericInput(e, setSqFt, 100, 100000)}\n          onBlur={() => setSqFt(prev => prev === '' ? '0' : prev)}\n          min=\"100\"\n          max=\"100000\"\n          step=\"1\"\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label>Waste (%)</label>\n        <input \n          type=\"number\" \n          value={waste} \n          onChange={handleWasteChange}\n          onBlur={handleWasteBlur}\n          min=\"0\"\n          max=\"50\"\n          step=\"5\"\n        />\n      </div>\n\n      <div className=\"input-group\">\n        <label>Pitch</label>\n        <select value={pitch} onChange={handlePitchChange}>\n          {Object.keys(pitchOptions).map(key => (\n            <option key={key} value={key}>{key}</option>\n          ))}\n        </select>\n        <div className=\"pitch-price-input\">\n          <span className=\"dollar-sign\">$</span>\n          <input \n            type=\"number\" \n            value={pitchPrice} \n            onChange={handlePitchPriceChange}\n            onBlur={handlePitchPriceBlur}\n            min=\"0\"\n            max=\"1000\"\n            step=\"1\"\n          />\n          <span>/Sq</span>\n        </div>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Warranty</label>\n        <select value={warranty} onChange={handleWarrantyChange}>\n          {Object.keys(warrantyOptions).map(key => (\n            <option key={key} value={key}>{key}</option>\n          ))}\n        </select>\n        <div className=\"warranty-price-input\">\n          <span className=\"dollar-sign\">$</span>\n          <input \n            type=\"number\" \n            value={warrantyPrice} \n            onChange={handleWarrantyPriceChange}\n            onBlur={handleWarrantyPriceBlur}\n            min=\"0\"\n            max=\"1000\"\n            step=\"1\"\n          />\n          <span>/Sq</span>\n        </div>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Home Type</label>\n        <select value={homeType} onChange={handleHomeTypeChange}>\n          {Object.entries(homeTypeOptions).map(([key, { label, price }]) => (\n            <option key={key} value={key}>\n              {key === 'single' \n                ? label \n                : `${label} +($${price})`}\n            </option>\n          ))}\n        </select>\n        <div className=\"price-input-wrapper\">\n          <span className=\"dollar-sign\">$</span>\n          <input \n            type=\"number\" \n            value={homeTypePrice} \n            onChange={handleHomeTypePriceChange}\n            onBlur={handleHomeTypePriceBlur}\n            min=\"0\"\n            max=\"1000\"\n            step=\"1\"\n          />\n          <span>/Sq</span>\n        </div>\n      </div>\n\n      <div className=\"input-group\">\n        <label>Adders</label>\n        <select value={adder} onChange={handleAdderChange}>\n          {Object.entries(adderOptions).map(([key, { label, price, unit }]) => (\n            <option key={key} value={key}>\n              {key === 'none' ? label : `${label} ($${price}/${unit})`}\n            </option>\n          ))}\n        </select>\n        {adder !== 'none' && (\n          <div className=\"price-input-wrapper\">\n            <input \n              type=\"number\" \n              value={adderQuantity} \n              onChange={handleAdderQuantityChange}\n              onBlur={handleAdderQuantityBlur}\n              min=\"0\"\n              max=\"1000\"\n              step=\"1\"\n            />\n            <span>{adderOptions[adder].unit}(s)</span>\n          </div>\n        )}\n      </div>\n\n      <div className=\"results\">\n        <div>Squares: {squares}</div>\n        <div>Total Price: ${totalPrice.toFixed(2)}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default RoofCalculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}